{
  "swagger": "2.0",
  "info": {
    "title": "VeloCloud Orchestrator API",
    "version": "3.2.2",
    "contact": {
      "name": "VMware SD-WAN by VeloCloud",
      "email": "support@velocloud.net",
      "url": "https://www.vmware.com/products/sd-wan-by-velocloud.html"
    }
  },
  "basePath": "/portal/rest",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login/operatorLogin": {
      "post": {
        "operationId": "login_operator_login",
        "summary": "Authentication for an operator user",
        "tags": [
          "all",
          "login"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/auth_param"
          }
        ],
        "responses": {
          "200": {
            "description": "If you are using an HTTP client that is configured to automatically follow HTTP redirects (e.g. Postman), a successful authentication request will cause your client to follow a HTTP 302 redirect to the portal 'Home' web page. Your session cookie may then be used to make API calls."
          },
          "302": {
            "description": "An HTTP 302 response is returned on both successful and failed authentication attempts. If the response includes a Set-Cookie header specifying a non-empty velocloud.session cookie, authentication was successful and this cookie may be used to make API calls."
          }
        }
      }
    },
    "/login/enterpriseLogin": {
      "post": {
        "operationId": "login_enterprise_login",
        "summary": "Authentication for non-operator users",
        "tags": [
          "all",
          "login"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/auth_param"
          }
        ],
        "responses": {
          "200": {
            "description": "If you are using an HTTP client that is configured to automatically follow HTTP redirects (e.g. Postman), a successful authentication request will cause your client to follow an HTTP 302 redirect to the portal 'Home' web page. Your session cookie may then be used to make API calls."
          },
          "302": {
            "description": "An HTTP 302 response is returned on both successful and failed authentication attempts. If the response includes a Set-Cookie header specifying a non-empty velocloud.session cookie, authentication was successful and this cookie may be used to make API calls."
          }
        }
      }
    },
    "/logout": {
      "post": {
        "operationId": "logout",
        "summary": "Deactivate a given authorization cookie",
        "tags": [
          "all",
          "login"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "If you are using an HTTP client that is configured to automatically follow HTTP redirects (e.g. Postman), a successful logout request will cause your client to follow an HTTP 302 redirect to the portal login web page."
          },
          "302": {
            "description": "An HTTP 302 (redirect) response is returned on both successful and failed logout attempts."
          }
        }
      }
    },
    "/meta/{apiPath}": {
      "post": {
        "deprecated": true,
        "operationId": "meta",
        "summary": "Get meta-data on any other API call",
        "tags": [
          "all",
          "meta"
        ],
        "parameters": [
          {
            "name": "apiPath",
            "in": "path",
            "description": "the path to another api method, starting after /rest/",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "schema": {
              "type": "object",
              "properties": {
                "privileges": {
                  "type": "object"
                },
                "swagger": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          }
        }
      }
    },
    "/clientDevice/setClientDeviceHostName": {
      "post": {
        "summary": "Set hostname for client device",
        "description": "Set hostname for client device\n\nPrivileges required:\n\n`UPDATE` `CLIENT_DEVICE`",
        "tags": [
          "clientDevice",
          "all"
        ],
        "operationId": "set_client_device_host_name",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "CLIENT_DEVICE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "set_client_device_host_name",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "clientDeviceId": {
                  "type": "integer"
                },
                "hostName": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                }
              },
              "required": [
                "enterpriseId",
                "hostName"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/set_client_device_host_name_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/cloneAndConvertConfiguration": {
      "post": {
        "summary": "Clone and convert a network based profile configuration to segment based profile configuration",
        "description": "Clones an convert existing network configuration by configurationId. Accepts an enterpriseId or networkId to associate the new config with an enterprise or network. On success, returns an object the ID of the newly created configuration object.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_PROFILE`, or\n\n`CREATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_clone_and_convert_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "CREATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_clone_and_convert_configuration",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "guestVLANSegmentObjectId": {
                  "type": "integer"
                }
              },
              "required": [
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_clone_and_convert_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/cloneConfiguration": {
      "post": {
        "summary": "Clone configuration profile",
        "description": "Clones the specified configuration (by `configurationId`) and all associated configuration modules. Accepts an `enterpriseId` or `networkId` to associate the new configuration with an enterprise or network. Select modules may also be specified. On success, returns the `id` of the newly created configuration object.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_PROFILE`, or\n\n`CREATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_clone_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "CREATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_clone_configuration",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_clone_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/cloneEnterpriseTemplate": {
      "post": {
        "summary": "Clone default enterprise configuration profile",
        "description": "Creates a new enterprise configuration from the enterprise default configuration. On success, returns the `id` of the newly created configuration object.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_PROFILE`, or\n\n`CREATE` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_clone_enterprise_template",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "CREATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_clone_enterprise_template",
              "properties": {
                "enterpriseId": {
                  "type": "integer",
                  "description": "Required if called from the operator or MSP context, identifies the target enterprise of the API call."
                },
                "configurationType": {
                  "type": "string",
                  "enum": [
                    "SEGMENT_BASED",
                    "NETWORK_BASED"
                  ],
                  "description": "If both network and segment based functionality is granted to the enterprise, chose which template type to clone. If not specified the type of the operator profile assigned to the enterprise will be used."
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_clone_enterprise_template_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/deleteConfiguration": {
      "post": {
        "summary": "Delete a configuration profile",
        "description": "Delete an existing configuration profile. On success, returns an object indicating the number of rows deleted.\n\nPrivileges required:\n\n`DELETE` `ENTERPRISE_PROFILE`, or\n\n`DELETE` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_delete_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "DELETE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_delete_configuration",
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_delete_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/getConfiguration": {
      "post": {
        "summary": "Get a configuration profile",
        "description": "Get a configuration profile, optionally with module detail.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`, or\n\n`READ` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_get_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_get_configuration",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "modules",
                      "edgeCount",
                      "enterprises",
                      "enterpriseCount",
                      "counts"
                    ]
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_get_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/getConfigurationModules": {
      "post": {
        "summary": "List the modules that compose a configuration profile",
        "description": "Retrieve a list of the configuration modules that compose the given configuration profile.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`, or\n\n`READ` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_get_configuration_modules",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_get_configuration_modules",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "noData": {
                  "type": "boolean"
                },
                "modules": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "imageUpdate",
                      "controlPlane",
                      "managementPlane",
                      "firewall",
                      "QOS",
                      "deviceSettings",
                      "WAN",
                      "metaData",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "configuration_get_configuration_modules_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/configuration_get_configuration_modules_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/getRoutableApplications": {
      "post": {
        "summary": "Get first packet routable applications",
        "description": "Gets all applications that are first packet routable. If called from an operator or MSP context, then `enterpriseId` is required. Optionally, specify `edgeId` to get the map for a specific Edge.\n\nPrivileges required:\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_get_routable_applications",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "VIEW_FLOW_STATS",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_get_routable_applications",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_get_routable_applications_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/insertConfigurationModule": {
      "post": {
        "summary": "Insert a new configuration module",
        "description": "Insert a new configuration module into the given configuration profile.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`, or\n\n`UPDATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_insert_configuration_module",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "UPDATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_insert_configuration_module",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "imageUpdate",
                    "controlPlane",
                    "managementPlane",
                    "firewall",
                    "QOS",
                    "deviceSettings",
                    "WAN",
                    "metaData",
                    "properties"
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "ENTERPRISE",
                    "OPERATOR",
                    "GATEWAY"
                  ]
                },
                "description": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "configurationId": {
                  "type": "integer"
                },
                "version": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "data",
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_insert_configuration_module_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/updateConfigurationModule": {
      "post": {
        "summary": "Update a configuration module",
        "description": "Update an existing configuration module with the data. module data contained in the _update object.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`, or\n\n`UPDATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_update_configuration_module",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "UPDATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_update_configuration_module",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "basic": {
                  "type": "boolean",
                  "default": false
                },
                "_update": {
                  "$ref": "#/definitions/configuration_module"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_update_configuration_module_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/configureActiveForReplication": {
      "post": {
        "summary": "Designate a standby Orchestrator for disaster recovery replication",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Configure the current Orchestrator to be active and the specified Orchestrator to be standby for Orchestrator disaster recovery replication. Required attributes are 1) standbyList, a single-entry array containing the standbyAddress and standbyUuid, 2) drVCOUser, a Orchestrator super user available on both the active and standby VCOs, and 3) drVCOPassword, the password of drVCOUser on the standby Orchestrator (unless the autoConfigStandby option is specified as false). The call sets up the active Orchestrator to allow replication from the standby and then (unless autoConfigStandby is false) makes a transitionToStandby API call to the specified standby, expected to have been previously placed in STANDBY_CANDIDATE state via prepareForStandby.  After this call, the active and standby VCOs should be polled via getReplicationStatus until they  both reach STANDBY_RUNNING drState (or a configuration error is reported).  (Note: the drVCOPassword is not persisted.)\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_configure_active_for_replication",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_configure_active_for_replication",
              "properties": {
                "standbyList": {
                  "type": "array",
                  "items": {
                    "title": "standby_vco_designee",
                    "type": "object",
                    "properties": {
                      "standbyAddress": {
                        "type": "string"
                      },
                      "standbyReplicationAddress": {
                        "type": "string"
                      },
                      "standbyUuid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "standbyAddress",
                      "standbyUuid"
                    ]
                  }
                },
                "autoConfigStandby": {
                  "type": "boolean",
                  "default": true
                },
                "drVCOUser": {
                  "type": "string"
                },
                "drVCOPassword": {
                  "type": "string"
                }
              },
              "required": [
                "standbyList",
                "drVCOUser",
                "drVCOPassword"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_configure_active_for_replication_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/demoteActive": {
      "post": {
        "summary": "Demote current server from active to zombie",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "No input parameters are required.  The active server is expected to be in the drState FAILURE_GET_STANDBY_STATUS or FAILURE_MYSQL_ACTIVE_STATUS, meaning that DR protection had been engaged (with the last successful replication status observed at lastDRProtectedTime) but that active failed a health check since that time.  If the active server is in the drState STANDBY_RUNNING, meaning that it has detected no problems in interacting with the standby server, the operator can force demotion of the active using the optional parameter force passed with value of true; in this case, the operator must ensure the standby server has already been successfully promoted.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_demote_active",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_demote_active",
              "properties": {
                "force": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_demote_active_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/getReplicationBlob": {
      "post": {
        "summary": "Get the blob needed to configure replication on the standby",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Get from the active Orchestrator the blob needed to configure replication on the standby. Only used when configureActiveForReplication was called with autoConfigStandby set to false [true by default].\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_get_replication_blob",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/disaster_recovery_get_replication_blob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_get_replication_blob_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/getReplicationStatus": {
      "post": {
        "summary": "Get disaster recovery status",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Get disaster recovery replication status, optionally with client contact, state transition history, and storage information.  No input parameters are required.  Can optionally specify 1 or more of the following with parameters: clientContact,clientCount,stateHistory,storageInfo.\n\nPrivileges required:\n\n`READ` `REPLICATION`",
        "operationId": "disaster_recovery_get_replication_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_get_replication_status",
              "properties": {
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "clientContact",
                      "stateHistory",
                      "clientCount",
                      "storageInfo"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_get_replication_status_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/prepareForStandby": {
      "post": {
        "summary": "Prepare current Orchestrator to be configured as a standby system",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Transitions the current Orchestrator to a quiesced state, ready to be configured as a standby system. No input parameters are required.  After this call, the Orchestrator will be restarted in standby mode. The caller should subsequently poll `getReplicationStatus` until `drState` is `STANDBY_CANDIDATE`.  This is the first step in configuring Orchestrator disaster recovery.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_prepare_for_standby",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/disaster_recovery_prepare_for_standby"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_prepare_for_standby_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/promoteStandbyToActive": {
      "post": {
        "summary": "Promote the current server to take over as the single standalone VCO",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "The current server is expected to be a standby in the drState FAILURE_MYSQL_STANDBY_STATUS, meaning that DR protection had been engaged (with the last successful replication status observed at lastDRProtectedTime) but that standby has been unable to replicate since that time. If the standby server is in the drState STANDBY_RUNNING, meaning that it has detected no problems in replicating from the active server, the operator can force promotion of the standby using the optional parameter force passed with value of true; in this case, the standby server will call demoteActive/force on the active.  The operator should, if possible, ensure the formerly active server is demoted by running demoteServer directly on that server if the standby server was unable to do so successfully.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_promote_standby_to_active",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_promote_standby_to_active",
              "properties": {
                "force": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_promote_standby_to_active_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/removeStandby": {
      "post": {
        "summary": "Unconfigure disaster recovery on the current server",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Unconfigure disaster recovery on the current server.  Also, make a best-effort call to removeStandby on the paired DR server. No input parameters are required.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_remove_standby",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/disaster_recovery_remove_standby"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_remove_standby_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/transitionToStandby": {
      "post": {
        "summary": "Configure current Orchestrator to transition to standby in disaster recovery active/standby pair.",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Configure current Orchestrator to transition to standby in disaster recovery active/standby pair. Requires parameter activeAccessFromStandby, which contains the data needed to configure standby. This data is produced by configureActiveForReplication, which by default, automatically calls transitionToStandby; an explicit call is only needed, with a blob obtained from getReplicationBlob, if configureActiveForReplication is called with autoConfigStandby set false.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_transition_to_standby",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_transition_to_standby",
              "properties": {
                "activeAccessFromStandby": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_transition_to_standby_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/deleteEdge": {
      "post": {
        "summary": "Delete an edge",
        "description": "Delete an edge by id.\n\nPrivileges required:\n\n`DELETE` `EDGE`",
        "tags": [
          "all",
          "edge"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "edge_delete_edge",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_delete_edge",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "ids"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_delete_edge_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/deleteEdgeBgpNeighborRecords": {
      "post": {
        "summary": "Delete edge BGP neighbor records",
        "description": "Deletes BGP record(s) matching the given record keys (neighborIp) on the edges with the given IDs, if they exist.\n\nPrivileges required:\n\n`DELETE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "edge"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "edge_delete_edge_bgp_neighbor_records",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_delete_edge_bgp_neighbor_records",
              "properties": {
                "records": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "edgeId": {
                        "type": "integer"
                      },
                      "neighborIp": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_delete_edge_bgp_neighbor_records_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/edgeCancelReactivation": {
      "post": {
        "summary": "Cancel a pending edge reactivation request",
        "tags": [
          "edge",
          "all"
        ],
        "description": "Cancel a pending reactivation edge reactivation request.\n\nPrivileges required:\n\n`CREATE` `EDGE`",
        "operationId": "edge_edge_cancel_reactivation",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_edge_cancel_reactivation",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId",
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_edge_cancel_reactivation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/edgeProvision": {
      "post": {
        "summary": "Provision an edge",
        "description": "Provision an edge prior to activation.\n\nPrivileges required:\n\n`CREATE` `EDGE`",
        "operationId": "edge_edge_provision",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_edge_provision",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "serialNumber": {
                  "type": "string"
                },
                "modelNumber": {
                  "type": "string",
                  "enum": [
                    "edge500",
                    "edge5X0",
                    "edge510",
                    "edge840",
                    "edge1000",
                    "edge1000qat",
                    "virtual"
                  ]
                },
                "description": {
                  "type": "string"
                },
                "site": {
                  "$ref": "#/definitions/site_object"
                },
                "haEnabled": {
                  "type": "boolean"
                },
                "generateCertificate": {
                  "type": "boolean"
                },
                "subjectCN": {
                  "type": "string"
                },
                "subjectO": {
                  "type": "string"
                },
                "subjectOU": {
                  "type": "string"
                },
                "challengePassword": {
                  "type": "string"
                },
                "privateKeyPassword": {
                  "type": "string"
                }
              },
              "required": [
                "configurationId",
                "modelNumber"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_edge_provision_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/edgeRequestReactivation": {
      "post": {
        "summary": "Reactivate an edge",
        "description": "Update activation state for an edge to REACTIVATION_PENDING.\n\nPrivileges required:\n\n`CREATE` `EDGE`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_edge_request_reactivation",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_edge_request_reactivation",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId",
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_edge_request_reactivation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getClientVisibilityMode": {
      "post": {
        "summary": "Get an edge's client visibility mode",
        "description": "Retrieve an edge's client visibility mode.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "operationId": "edge_get_client_visibility_mode",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "forceEnterpriseContext": true,
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_get_client_visibility_mode",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "edge_get_client_visibility_mode_result",
              "type": "object",
              "properties": {
                "edgeClientVisibilityMode": {
                  "type": "string",
                  "enum": [
                    "MAC",
                    "IP"
                  ]
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getEdge": {
      "post": {
        "summary": "Get edge",
        "tags": [
          "edge",
          "all"
        ],
        "description": "Gets the specified Edge with optional link, site, configuration, certificate, or enterprise details. Supports queries by Edge `id`, `deviceId`, `activationKey`, and `logicalId`.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "edge_get_edge",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_get_edge",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "logicalId": {
                  "type": "string"
                },
                "activationKey": {
                  "type": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "recentLinks",
                      "links",
                      "serviceGroups",
                      "site",
                      "enterprise",
                      "configuration",
                      "configurationWithModules"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_get_edge_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getEdgeConfigurationStack": {
      "post": {
        "summary": "Get an edge's configuration stack",
        "description": "Retrieve an edge's complete configuration profile, with all modules included.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`READ` `ENTERPRISE_PROFILE`",
        "operationId": "edge_get_edge_configuration_stack",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_get_edge_configuration_stack",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "edge_get_edge_configuration_stack_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_get_edge_configuration_stack_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/setEdgeEnterpriseConfiguration": {
      "post": {
        "summary": "Apply an enterprise configuration to an Edge",
        "tags": [
          "all",
          "edge"
        ],
        "description": "Sets the enterprise configuration for the specified Edge (by `edgeId`).\n\nPrivileges required:\n\n`UPDATE` `EDGE`\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "operationId": "edge_set_edge_enterprise_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            },
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_set_edge_enterprise_configuration",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId",
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_set_edge_enterprise_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/setEdgeHandOffGateways": {
      "post": {
        "summary": "Set an edge's on-premise hand off gateways",
        "description": "Set an edge's on-premise hand off gateways. A primary and secondary gateway are defined, primary is required, secondary is optional. All existing edge-gateway hand off relationships are moved and are replaced by the the specified primary and secondary gateways.\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "all",
          "edge"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "edge_set_edge_hand_off_gateways",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_set_edge_hand_off_gateways",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "gateways": {
                  "type": "object",
                  "properties": {
                    "primary": {
                      "type": "integer"
                    },
                    "primaryIpsecDetail": {
                      "$ref": "#/definitions/gateway_handoff_ipsec_gateway_detail"
                    },
                    "secondary": {
                      "type": "integer"
                    },
                    "secondaryIpsecDetail": {
                      "$ref": "#/definitions/gateway_handoff_ipsec_gateway_detail"
                    }
                  },
                  "required": [
                    "primary"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_set_edge_hand_off_gateways_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/setEdgeOperatorConfiguration": {
      "post": {
        "summary": "Apply an operator configuration to an Edge",
        "tags": [
          "all",
          "edge"
        ],
        "description": "Set an Edge's operator configuration. This overrides any enterprise-assigned operator configuration and the network default operator configuration.\n\nPrivileges required:\n\n`UPDATE` `EDGE`\n\n`READ` `OPERATOR_PROFILE`",
        "operationId": "edge_set_edge_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            },
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_set_edge_operator_configuration",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId",
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_set_edge_operator_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/updateEdgeAdminPassword": {
      "post": {
        "summary": "Update edge's local UI authentication credentials",
        "description": "Request an update to the edge's local UI authentication credentials. On success, returns a JSON object with the ID of the action queued, status for which can be queried using the edgeAction/getEdgeAction API\n\nPrivileges required:\n\n`UPDATE` `EDGE`\n\n`UPDATE` `ENTERPRISE_KEYS`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_update_edge_admin_password",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            },
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_update_edge_admin_password",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_update_edge_admin_password_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/updateEdgeAttributes": {
      "post": {
        "summary": "Update edge attributes",
        "description": "Update basic edge attributes, including edge name, description, site information, or serial number.\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_update_edge_attributes",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_update_edge_attributes",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "site": {
                      "$ref": "#/definitions/site_object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "serialNumber": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_update_edge_attributes_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/updateEdgeCredentialsByConfiguration": {
      "post": {
        "summary": "Update edge UI credentials by configuration id",
        "tags": [
          "edge",
          "all"
        ],
        "description": "Request an update to the edge-local UI authentication credentials for all edges belonging to a configuration profile. On success, returns a JSON object containing a list of each of the action IDs queued.\n\nPrivileges required:\n\n`UPDATE` `EDGE`\n\n`UPDATE` `ENTERPRISE_KEYS`",
        "operationId": "edge_update_edge_credentials_by_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            },
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_update_edge_credentials_by_configuration",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "id",
                "credentials"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_update_edge_credentials_by_configuration_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/decodeEnterpriseKey": {
      "post": {
        "summary": "Decrypt an enterprise key",
        "tags": [
          "enterprise",
          "all"
        ],
        "description": "Decrypt an enterprise key\n\nPrivileges required:\n\n`READ` `ENTERPRISE_KEYS`",
        "operationId": "enterprise_decode_enterprise_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_decode_enterprise_key",
              "properties": {
                "key": {
                  "type": "string"
                }
              },
              "required": [
                "key"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_decode_enterprise_key_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterprise": {
      "post": {
        "summary": "Delete an enterprise",
        "description": "Delete the enterprise specified by the given id parameter. enterpriseId is also a valid alias for id.\n\nPrivileges required:\n\n`DELETE` `ENTERPRISE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_delete_enterprise",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterpriseGatewayRecords": {
      "post": {
        "summary": "Delete enterprise gateway record(s)",
        "description": "Delete the enterprise gateway record(s) matching the given gateway id(s) and neighbor IP addresses.\n\nPrivileges required:\n\n`DELETE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_delete_enterprise_gateway_records",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise_gateway_records",
              "properties": {
                "records": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/enterprise_delete_enterprise_delete_enterprise_gateway_records_record"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_gateway_records_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Delete an enterprise network allocation",
        "description": "Delete an enterprise network allocation, by id.\n\nPrivileges required:\n\n`DELETE` `NETWORK_ALLOCATION`",
        "operationId": "enterprise_delete_enterprise_network_allocation",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise_network_allocation",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterpriseService": {
      "post": {
        "summary": "Delete an enterprise service",
        "description": "Delete an enterprise service, by id.\n\nPrivileges required:\n\n`DELETE` `NETWORK_SERVICE`",
        "operationId": "enterprise_delete_enterprise_service",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise_service",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_service_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/encodeEnterpriseKey": {
      "post": {
        "summary": "Encrypt an enterprise key",
        "tags": [
          "enterprise",
          "all"
        ],
        "description": "Encrypt an enterprise key\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_KEYS`",
        "operationId": "enterprise_encode_enterprise_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_encode_enterprise_key",
              "properties": {
                "key": {
                  "type": "string"
                }
              },
              "required": [
                "key"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_encode_enterprise_key_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterprise": {
      "post": {
        "summary": "Get enterprise",
        "description": "Retrieve enterprise data, with optional proxy (partner) detail.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_get_enterprise",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_get_enterprise",
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "enterpriseProxy"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAddresses": {
      "post": {
        "summary": "Get enterprise IP address information",
        "description": "Retrieve the public IP address information for the management and control entities associated with this enterprise, including Orchestrator(s), Gateway(s), and datacenter(s).\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "operationId": "enterprise_get_enterprise_addresses",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_addresses",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_addresses_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_addresses_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAlertConfigurations": {
      "post": {
        "summary": "Get the enterprise alert configuration",
        "description": "Get the alert configurations associated with an enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_alert_configurations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_alert_configurations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_alert_configurations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_alert_configurations_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAlerts": {
      "post": {
        "summary": "Get triggered enterprise alerts",
        "description": "Gets past triggered alerts for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_ALERT`",
        "operationId": "enterprise_get_enterprise_alerts",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_alerts",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    }
                  }
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "notifications"
                    ]
                  }
                }
              },
              "required": [
                "enterpriseId",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_alerts_result",
              "type": "object",
              "properties": {
                "metaData": {
                  "$ref": "#/definitions/list_metadata"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/enterprise_get_enterprise_alerts_result_item"
                  }
                }
              },
              "required": [
                "metaData",
                "data"
              ]
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAllAlertsRecipients": {
      "post": {
        "summary": "List recipients currently receiving ALL enterprise alerts",
        "description": "List the recipients currently configured to receive all alerts for an enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_all_alert_recipients",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_all_alert_recipients",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_all_alert_recipients_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseCapabilities": {
      "post": {
        "summary": "Get enterprise capabilities",
        "description": "Retrieve a list of the enterprise capabilities currently enabled/disabled on an enterprise (e.g. BGP, COS mapping, PKI, etc.)\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_capabilities",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_capabilities",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_capabilities_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseConfigurations": {
      "post": {
        "summary": "Get enterprise configuration profiles",
        "description": "Retrieve a list of configuration profiles existing on an enterprise, with optional edge and/or module detail.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "operationId": "enterprise_get_enterprise_configurations",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_configurations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationType": {
                  "type": "string",
                  "enum": [
                    "NETWORK_BASED",
                    "SEGMENT_BASED"
                  ]
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "modules",
                      "edgeCount",
                      "refs",
                      "deviceSettings"
                    ]
                  }
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_configurations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_configurations_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseEdges": {
      "post": {
        "summary": "Get edges associated with an enterprise",
        "tags": [
          "enterprise",
          "all"
        ],
        "description": "Gets all Edges associated with the specified enterprise, including optional site, link, and configuration details.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "enterprise_get_enterprise_edges",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_edges",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "site",
                      "links",
                      "recentLinks",
                      "configuration",
                      "cloudServices",
                      "cloudServiceSiteStatus",
                      "vnfs",
                      "certificates",
                      "licenses"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_edges_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_edges_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseGatewayHandoff": {
      "post": {
        "summary": "Get enterprise gateway handoff configuration",
        "description": "Get enterprise gateway handoff configuration.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_gateway_handoff",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_get_enterprise_gateway_handoff",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_gateway_handoff_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Get an enterprise network allocation",
        "description": "Retrieve a network allocation object by id.\n\nPrivileges required:\n\n`READ` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_network_allocation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_network_allocation",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "profileCount"
                    ]
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseNetworkAllocations": {
      "post": {
        "summary": "Get all network allocation objects defined on an enterprise",
        "description": "Retrieve a list of all of the network allocations defined onthe given enterprise.\n\nPrivileges required:\n\n`READ` `NETWORK_ALLOCATION`",
        "operationId": "enterprise_get_enterprise_network_allocations",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_network_allocations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "profileCount"
                    ]
                  }
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_network_allocations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_network_allocations_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseNetworkSegments": {
      "post": {
        "summary": "Get all network segment objects defined on an enterprise",
        "description": "Retrieve a list of all of the network segments defined forthe given enterprise.\n\nPrivileges required:\n\n`READ` `NETWORK_ALLOCATION`",
        "operationId": "enterprise_get_enterprise_network_segments",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_network_segments",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "name": "string"
                },
                "type": {
                  "name": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "profileCount",
                      "edgeUsage",
                      "configuration",
                      "handoffUsage",
                      "mpgUsage"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_network_segments_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_network_segments_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseProperty": {
      "post": {
        "summary": "Get enterprise property",
        "description": "Get a enterprise property by object id or other attribute.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "operationId": "enterprise_get_enterprise_property",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_property",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseRouteConfiguration": {
      "post": {
        "summary": "Get route advertisement and routing preferences policy",
        "description": "Get enterprise route advertisement, routing peferences and OSPF, BGP advertisement policy as configured in the Overlay Flow Control table.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_route_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_get_enterprise_route_configuration",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_route_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseRouteTable": {
      "post": {
        "summary": "Get the enterprise route table",
        "description": "Get composite enterprise route table, optionally scoped by profile(s). The returned routes include static routes, directly connected routes and learned routes.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_route_table",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_route_table",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "profiles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                },
                "subnets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subnet": {
                        "type": "string"
                      },
                      "preferredExits": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/enterprise_route"
                        }
                      },
                      "eligableExits": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/enterprise_route"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_route_table_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseServices": {
      "post": {
        "summary": "Get enterprise network service detail",
        "description": "Get the network service JSON objects defined for an enterprise.\n\nPrivileges required:\n\n`READ` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_services",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_services",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "profileCount",
                      "edgeUsage",
                      "configuration"
                    ]
                  }
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_services_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_services_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseUsers": {
      "post": {
        "tags": [
          "userMaintenance",
          "all"
        ],
        "summary": "Get list of enterprise users by enterprise id",
        "operationId": "enterprise_get_enterprise_users",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_users",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_users_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `ENTERPRISE_USER`"
      }
    },
    "/enterprise/insertEnterprise": {
      "post": {
        "summary": "Create enterprise",
        "description": "Creates a new enterprise, which is owned by the operator.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Insert an enterprise network allocation",
        "description": "Insert a new enterprise network allocation.\n\nPrivileges required:\n\n`CREATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise_network_allocation",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_enterprise_network_allocation",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "spaces": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/enterprise_network_space"
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseNetworkSegment": {
      "post": {
        "summary": "Insert an enterprise network segment",
        "description": "Insert a new enterprise network segment.\n\nPrivileges required:\n\n`CREATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise_network_segment",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_enterprise_network_segment",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "REGULAR",
                    "CDE"
                  ]
                },
                "data": {
                  "$ref": "#/definitions/network_segment_data"
                }
              },
              "required": [
                "name",
                "type",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_network_segment_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseService": {
      "post": {
        "summary": "Insert a new enterprise service",
        "description": "Insert a new enterprise service.\n\nPrivileges required:\n\n`CREATE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_insert_enterprise_service",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_enterprise_service",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "edgeId": {
                  "type": "integer"
                },
                "parentGroupId": {
                  "type": "integer"
                }
              },
              "required": [
                "type",
                "name",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_service_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseUser": {
      "post": {
        "summary": "Insert an enterprise user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "tags": [
          "userMaintenance",
          "all"
        ],
        "description": "Insert an enterprise user.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_USER`",
        "operationId": "enterprise_insert_enterprise_user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/new_enterprise_user"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseAlertConfigurations": {
      "post": {
        "summary": "Insert, update, or delete enterprise alert configurations",
        "description": "Insert, update, or delete enterprise alert configurations. Returns the array of alert configurations submitted, with ids added for the entries that have been successfully inserted. If an entry is not successfully inserted or updated, an `error` property is included in the .\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_enterprise_alert_configurations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_or_update_enterprise_alert_configurations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseAlertConfigurations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/enterprise_alert_configuration"
                  }
                }
              },
              "required": [
                "enterpriseAlertConfigurations"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_alert_configurations_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseCapability": {
      "post": {
        "summary": "Insert or update an enterprise capability",
        "description": "Insert or update an enterprise capability.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_enterprise_capability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_or_update_enterprise_capability",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "enableOSPF",
                    "enableBGP",
                    "enablePKI",
                    "enableFwLogs",
                    "enableVQM",
                    "enableServiceRateLimiting",
                    "enableCosMapping",
                    "enableSegmentation",
                    "enableNetworks",
                    "enableEnterpriseAuth",
                    "enablePremium",
                    "edgeVnfs.enable",
                    "edgeVnfs.securityVnf.paloAlto"
                  ]
                },
                "value": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_capability_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseGatewayHandoff": {
      "post": {
        "summary": "Insert or update an enterprise gateway handoff configuration",
        "description": "Insert or update an enterprise gateway handoff configuration.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_enterprise_gateway_handoff",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_gateway_handoff"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_gateway_handoff_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseProperty": {
      "post": {
        "summary": "Insert or update an enterprise property",
        "description": "Insert a enterprise property. If property with the given name already exists, the property will be updated.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "operationId": "enterprise_insert_or_update_enterprise_property",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_or_update_enterprise_property",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "dataType": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "NUMBER",
                    "BOOLEAN",
                    "JSON",
                    "DATE",
                    "DATETIME"
                  ]
                },
                "isPassword": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "enterpriseId",
                "name",
                "value"
              ],
              "example": {
                "enterpriseId": 1532,
                "name": "vco.enterprise.authentication.twoFactor.enable",
                "dataType": "BOOLEAN",
                "value": "true"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/setEnterpriseAllAlertsRecipients": {
      "post": {
        "summary": "Set the recipients who should receive all alerts for an enterprise",
        "description": "Set the recipients who should receive all alerts for an enterprise.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_set_enterprise_all_alert_recipients",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_set_enterprise_all_alert_recipients",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "enterpriseUserId": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "smsEnabled": {
                        "type": "boolean"
                      },
                      "emailEnabled": {
                        "type": "boolean"
                      },
                      "mobileEnabled": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "smsEnabled": {
                  "type": "boolean"
                },
                "smsList": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string"
                        },
                        "mobilePhone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "emailEnabled": {
                  "type": "boolean"
                },
                "emailList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "mobileEnabled": {
                  "type": "boolean"
                },
                "mobileList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_set_enterprise_all_alert_recipients_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterprise": {
      "post": {
        "summary": "Update an enterprise",
        "description": "Update an enterprise provided an object id or name, and an _update object with the names and values of columns to be updated.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_update_enterprise",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_update_enterprise",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "_update": {
                  "$ref": "#/definitions/enterprise_object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Update an enterprise network allocation",
        "description": "Update an enterprise network allocation, provided an object id and an _update object with the names and values of columns to be updated.\n\nPrivileges required:\n\n`UPDATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_network_allocation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_network_allocation",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseNetworkSegment": {
      "post": {
        "summary": "Update an enterprise network segment",
        "description": "Update an enterprise network segment.\n\nPrivileges required:\n\n`UPDATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_update_enterprise_network_segment",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_network_segment",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "REGULAR",
                        "CDE"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/network_segment_data"
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_network_segment_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseRoute": {
      "post": {
        "summary": "Update an enterprise route",
        "description": "Update an enterprise route, set advertisement and cost values. Required parameters include the original route, as returned by enterprise/getEnterpriseRouteTable and the updated route with modified advertisement and route preference ordering.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_route",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_route",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "original": {
                  "$ref": "#/definitions/enterprise_route_collection"
                },
                "updated": {
                  "$ref": "#/definitions/enterprise_route_collection"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_route_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseRouteConfiguration": {
      "post": {
        "summary": "Update enterprise routing configuration",
        "description": "Update enterprise routing configuration, by configuration id or logicalId.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_route_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_route_configuration",
              "required": [
                "data"
              ],
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "edge",
                    "hub",
                    "partnerGateway",
                    "routingPreference"
                  ],
                  "properties": {
                    "edge": {
                      "type": "object",
                      "required": [
                        "ospf",
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "ospf": {
                          "type": "object",
                          "required": [
                            "advertiseExternal",
                            "advertiseInterArea",
                            "advertiseIntraArea"
                          ],
                          "properties": {
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseInterArea": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseIntraArea": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        },
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseInternal",
                            "advertiseExternal",
                            "advertiseNeighborTags"
                          ],
                          "properties": {
                            "advertiseInternal": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseNeighborTags": {
                              "type": "object",
                              "required": [
                                "UPLINK"
                              ],
                              "properties": {
                                "UPLINK": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic",
                            "advertiseConnected"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseConnected": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "hub": {
                      "type": "object",
                      "required": [
                        "ospf",
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "ospf": {
                          "type": "object",
                          "required": [
                            "advertiseExternal",
                            "advertiseInterArea",
                            "advertiseIntraArea"
                          ],
                          "properties": {
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseInterArea": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseIntraArea": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        },
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseInternal",
                            "advertiseExternal",
                            "advertiseNeighborTags"
                          ],
                          "properties": {
                            "advertiseInternal": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseNeighborTags": {
                              "type": "object",
                              "required": [
                                "UPLINK"
                              ],
                              "properties": {
                                "UPLINK": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic",
                            "advertiseConnected"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseConnected": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "partnerGateway": {
                      "type": "object",
                      "required": [
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseExternal"
                          ],
                          "properties": {
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "routingPreference": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "entity",
                          "allow"
                        ],
                        "properties": {
                          "entity": {
                            "type": "string",
                            "enum": [
                              "EDGE",
                              "HUB",
                              "ROUTER",
                              "PARTNER"
                            ]
                          },
                          "allow": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_route_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseSecurityPolicy": {
      "post": {
        "summary": "Update enterprise security policy",
        "description": "Update enterprise security policy in accordance with to the passed ipsec settings.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_security_policy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_security_policy",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "ipsec": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "enum": [
                        "MD5",
                        "SHA_1",
                        "SHA_256"
                      ]
                    },
                    "encryption": {
                      "type": "string",
                      "enum": [
                        "AES_128_CBC",
                        "AES_256_CBC"
                      ]
                    },
                    "diffieHellmanGroup": {
                      "type": "string",
                      "enum": [
                        "GROUP_2",
                        "GROUP_5",
                        "GROUP_14"
                      ]
                    },
                    "perfectForwardSecrecy": {
                      "type": "string",
                      "enum": [
                        "DISABLED",
                        "GROUP_2",
                        "GROUP_5"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_security_policy_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseService": {
      "post": {
        "summary": "Update an enterprise service",
        "description": "Update the enterprise service with the given id according to the settings specified by the _update field.\n\nPrivileges required:\n\n`UPDATE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_service",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_service",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              },
              "required": [
                "id",
                "_udpate"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_service_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/deleteEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Delete an enterprise proxy admin user",
        "description": "Delete an enterprise proxy user by id or username. Note that `enterpriseProxyId` is a required parameter when invoking this method as an operator or partner user.\n\nPrivileges required:\n\n`DELETE` `PROXY_USER`",
        "operationId": "enterprise_proxy_delete_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_delete_enterprise_proxy_user",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_delete_enterprise_proxy_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyEdgeInventory": {
      "post": {
        "summary": "Get a list of all partner enterprises and edge inventory associated with each enterprise",
        "description": "Get  partner enterprises and their edge inventory.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_edge_inventory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_edge_inventory",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_edge_inventory_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_edge_inventory_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyEnterprises": {
      "post": {
        "summary": "Get a list of all partner enterprises",
        "description": "Get all partner enterprises, optionally including all edges or edge counts.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_enterprises",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_enterprises",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_enterprises_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_enterprises_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyGatewayPools": {
      "post": {
        "summary": "Get list of gateway pools",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "description": "Get list of gateway pools associated with an enterprise proxy, optionally with lists of gateways or enterprises belonging to each pool.\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "operationId": "enterprise_proxy_get_enterprise_proxy_gateway_pools",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_gateway_pools",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "gateways",
                      "enterprises"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_gateway_pools_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_gateway_pools_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyOperatorProfiles": {
      "post": {
        "summary": "Get the operator profiles associated with a partner",
        "description": "Get the operator profiles associated with a proxy (MSP), as assigned by the operator.\n\nPrivileges required:\n\n`READ` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_operator_profiles",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_operator_profiles",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "modules",
                      "enterprises"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_operator_profiles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_operator_profiles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get an enterprise proxy user",
        "description": "Get an enterprise proxy user by id or username.\n\nPrivileges required:\n\n`READ` `PROXY_USER`\n\n`READ` `PROXY`",
        "operationId": "enterprise_proxy_get_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY_USER"
            },
            {
              "action": "READ",
              "object": "PROXY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_user"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyUsers": {
      "post": {
        "tags": [
          "userMaintenance",
          "all"
        ],
        "summary": "Get all enterprise proxy admin users",
        "operationId": "enterprise_proxy_get_enterprise_proxy_users",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_users",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_users_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `PROXY_USER`"
      }
    },
    "/enterpriseProxy/insertEnterpriseProxyEnterprise": {
      "post": {
        "summary": "Insert a new enterprise owned by an MSP",
        "description": "Insert an enterprise owned by an MSP. Whereas the `insertEnterprise` method will create an enterprise in the global or network context with no MSP association, this method will create one owned by an MSP, as determined by the credentials of the caller.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE`",
        "tags": [
          "enterpriseProxy",
          "all"
        ],
        "operationId": "enterprise_proxy_insert_enterprise_proxy_enterprise",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_enterprise_proxy_enterprise"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_enterprise_proxy_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/insertEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Create a new partner admin user",
        "description": "Create a new partner admin user\n\nPrivileges required:\n\n`CREATE` `PROXY_USER`",
        "operationId": "enterprise_proxy_insert_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/new_enterprise_proxy_user"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_enterprise_proxy_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/updateEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Update an enterprise proxy admin user",
        "description": "Update an enterprise proxy admin user\n\nPrivileges required:\n\n`UPDATE` `PROXY_USER`",
        "operationId": "enterprise_proxy_update_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "MSP_USER",
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_update_enterprise_proxy_user",
              "properties": {
                "_update": {
                  "$ref": "#/definitions/enterprise_user_with_role_info"
                },
                "id": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_update_enterprise_proxy_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseUser/deleteEnterpriseUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Delete an enterprise user.",
        "description": "Delete an enterprise user by id or username. Note that `enterpriseId` is a required parameter when invoking this method as an operator or partner user.\n\nPrivileges required:\n\n`DELETE` `ENTERPRISE_USER`",
        "operationId": "enterprise_user_delete_enterprise_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_user_delete_enterprise_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_user_delete_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseUser/getEnterpriseUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get an enterprise user",
        "description": "Get an enterprise user by id or username.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_USER`",
        "operationId": "enterprise_user_get_enterprise_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "ENTERPRISE_USER",
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_user_get_enterprise_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_user_get_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseUser/updateEnterpriseUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Update an enterprise user",
        "description": "Update an enterprise user provided an object `id` or other identifying attributes, and an `_update` object with the names and values of columns to be updated.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_USER`, or\n\n`UPDATE` `OPERATOR_USER`",
        "operationId": "enterprise_user_update_enterprise_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "ENTERPRISE_USER",
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_USER",
              "sufficient": true
            },
            {
              "action": "UPDATE",
              "object": "OPERATOR_USER",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_user_update_enterprise_user",
              "properties": {
                "_update": {
                  "$ref": "#/definitions/enterprise_user_with_role_info"
                },
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_user_update_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/event/getEnterpriseEvents": {
      "post": {
        "summary": "Get Edge events",
        "description": "Gets Edge events in an enterprise or Edge context. Returns an array of Edge events sorted by `eventTime`.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_EVENT`",
        "tags": [
          "event",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_EVENT"
            }
          ]
        },
        "operationId": "event_get_enterprise_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "event_get_enterprise_events",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "title": "filter",
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    }
                  }
                },
                "edgeId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/event_get_enterprise_events_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/event/getOperatorEvents": {
      "post": {
        "summary": "Get operator events",
        "description": "Gets operator events by network ID (optional). If not specified, will be taken for the caller's security context. Optionally, use a filter object to limit the number of events returned. Additionally, specify a time interval with an interval object. If no end date is specified, then the default is the current date. Specify a `gatewayId` to filter events for the specified gateway.\n\nPrivileges required:\n\n`READ` `OPERATOR_EVENT`",
        "tags": [
          "event",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_EVENT"
            }
          ]
        },
        "operationId": "event_get_operator_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "event_get_operator_events",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "title": "filter",
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    }
                  }
                },
                "gatewayId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/event_get_operator_events_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/firewall/getEnterpriseFirewallLogs": {
      "post": {
        "summary": "Get enterprise firewall logs",
        "description": "Gets firewall logs for the specified enterprise.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FIREWALL_LOGS` `undefined`",
        "tags": [
          "firewall",
          "all"
        ],
        "operationId": "firewall_get_enterprise_firewall_logs",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FIREWALL_LOGS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "firewall_get_enterprise_firewall_logs",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    }
                  }
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sourceIps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "destIps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "edges": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "rules"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/firewall_get_enterprise_firewall_logs_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/deleteGateway": {
      "post": {
        "summary": "Delete a gateway",
        "description": "Delete a gateway by id.\n\nPrivileges required:\n\n`DELETE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "gateway_delete_gateway",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_delete_gateway",
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_delete_gateway_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/gatewayProvision": {
      "post": {
        "summary": "Provision a gateway",
        "description": "Provision a gateway into an operator network.\n\nPrivileges required:\n\n`CREATE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "gateway_gateway_provision",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_gateway_provision",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "ipAddress": {
                  "type": "string"
                },
                "gatewayPoolId": {
                  "type": "integer"
                },
                "dnsName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isLoadBalanced": {
                  "type": "boolean"
                },
                "privateIpAddress": {
                  "type": "string"
                },
                "roles": {
                  "$ref": "#/definitions/gateway_roles_object"
                },
                "site": {
                  "$ref": "#/definitions/site_object"
                }
              },
              "required": [
                "networkId",
                "ipAddress"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_gateway_provision_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/getGatewayEdgeAssignments": {
      "post": {
        "summary": "Get edge assignments for a gateway",
        "tags": [
          "gateway",
          "all"
        ],
        "description": "Get edge assignments for a gateway\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "operationId": "gateway_get_gateway_edge_assignments",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_get_gateway_edge_assignments",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "gateway_get_gateway_edge_assignments_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/gateway_get_gateway_edge_assignments_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/updateGatewayAttributes": {
      "post": {
        "summary": "Update gateway attributes",
        "description": "Update gateway attributes (name, ipAddress, on-premise parametrization and description) and associated site attributes\n\nPrivileges required:\n\n`UPDATE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "gateway_update_gateway_attributes",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_update_gateway_attributes",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "site": {
                  "$ref": "#/definitions/site_object"
                },
                "ipsecGatewayDetail": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "strictHostCheck": {
                      "type": "boolean"
                    },
                    "strictHostCheckDN": {
                      "type": "string"
                    }
                  }
                },
                "handOffDetail": {
                  "$ref": "#/definitions/gateway_handoff_detail"
                },
                "roles": {
                  "$ref": "#/definitions/gateway_roles_object"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_update_gateway_attributes_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/linkQualityEvent/getLinkQualityEvents": {
      "post": {
        "summary": "Get link quality data",
        "description": "Returns link quality scores per link for a particular edge within a time interval. Rolls up link quality events to provide an aggregate score for the edge. Returns an empty array if no link quality events are available in the given timeframe.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "linkQualityEvent",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "link_quality_event_get_link_quality_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "link_quality_event_get_link_quality_events",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "individualScores": {
                  "type": "boolean"
                },
                "minutesPerSample": {
                  "type": "integer"
                },
                "debug": {
                  "type": "boolean"
                }
              },
              "required": [
                "edgeId",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/link_quality_event_get_link_quality_events_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppLinkMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by link",
        "description": "Fetch flow metric summaries for the given time interval by link. On success, this method returns an array of flow data where each entry corresponds to a link on the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_link_metrics",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_link_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_link_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_link_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppLinkSeries": {
      "post": {
        "summary": "Get flow metric time series data by link",
        "description": "Fetch flow metric time series for the given time interval by link. On success, this method returns an array of flow data where each entry corresponds to a link on the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_link_series",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_link_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_link_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_link_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by application",
        "description": "Fetch flow metric summaries for the given time interval by application. On success, this method returns an array of flow data where each entry corresponds to a single application. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "applications": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "with": {
                  "type": "string",
                  "enum": [
                    "category",
                    "linkId"
                  ]
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppSeries": {
      "post": {
        "summary": "Get flow metric time series data by application",
        "description": "Fetch flow metric time series for the given time interval by application. On success, this method returns an array of flow data where each entry corresponds to a single application. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "applications": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeCategoryMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by application category",
        "description": "Fetch flow metric summaries for the given time interval by application category. On success, this method returns an array of flow data where each entry corresponds to a category of application traffic that has traversed the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_category_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_category_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_category_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_category_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeCategorySeries": {
      "post": {
        "summary": "Get flow metric time series data by application category",
        "description": "Fetch flow metric time series for the given time interval by application category. On success, this method returns an array of flow data where each entry corresponds to a category of application traffic that has traversed the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_category_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_category_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_category_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_category_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDestMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by destination",
        "description": "Fetch flow metric summaries for the given time interval by destination. On success, this method returns an array of flow data where each entry corresponds to a distinct traffic destination. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_dest_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_dest_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "attribute": {
                  "type": "string",
                  "enum": [
                    "destDomain",
                    "destIp",
                    "destFQDN"
                  ]
                },
                "destinations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_dest_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_dest_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDestSeries": {
      "post": {
        "summary": "Get flow metric time series data by destination",
        "description": "Fetch flow metric time series for the given time interval by destination. On success, this method returns an array of flow data where each entry corresponds to a distinct traffic destination. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_dest_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_dest_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "attribute": {
                  "type": "string",
                  "enum": [
                    "destDomain",
                    "destIp",
                    "destFQDN"
                  ]
                },
                "destinations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_dest_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_dest_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDeviceMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by client device",
        "description": "Fetch flow metric summaries for the given time interval by client device. On success, this method returns an array of flow data where each entry corresponds to a distinct device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_USER_IDENTIFIABLE_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_device_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_USER_IDENTIFIABLE_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_device_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_device_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_device_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDeviceSeries": {
      "post": {
        "summary": "Get flow metric time series data by client device",
        "description": "Fetch flow metric time series for the given time interval by client device. On success, this method returns an array of flow data where each entry corresponds to a distinct device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_USER_IDENTIFIABLE_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_device_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_USER_IDENTIFIABLE_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_device_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_device_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_device_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeLinkMetrics": {
      "post": {
        "summary": "Get advanced flow metric aggregate data by link",
        "description": "Fetch advanced flow metric summaries for the given time interval by link. On success, this method returns an array of flow data where each entry corresponds to a link on the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_link_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_link_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/edge_link_metric"
                  }
                },
                "sort": {
                  "$ref": "#/definitions/edge_link_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_link_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_link_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeLinkSeries": {
      "post": {
        "summary": "Get advanced flow metric time series data by link",
        "description": "Fetch advanced flow metric time series for the given time interval by link. On success, this method returns an array of flow data where each entry corresponds to a link on the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_link_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_link_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/edge_link_metric"
                  }
                },
                "sort": {
                  "$ref": "#/definitions/edge_link_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_link_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_link_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeOsMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by client OS",
        "description": "Fetch flow metric summaries for the given time interval by client OS. On success, this method returns an array of flow data where each entry corresponds to a distinct OS on a client device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_os_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_os_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "os": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_os_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_os_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeOsSeries": {
      "post": {
        "summary": "Get flow metric time series data by client OS",
        "description": "Fetch flow metric time series for the given time interval by client OS. On success, this method returns an array of flow data where each entry corresponds to a distinct OS on a client device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_os_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_os_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "os": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_os_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_os_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeSegmentMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by segment Id",
        "description": "Fetch flow metric summaries for the given time interval by segment id. On success, this method returns an array of flow data where each entry corresponds to a segment id traffic that has traversed the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_segment_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_segment_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_segment_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_segment_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeSegmentSeries": {
      "post": {
        "summary": "Get flow metric time series data by segment id",
        "description": "Fetch flow metric time series for the given time interval by segment id. On success, this method returns an array of flow data where each entry corresponds to a segment id of traffic that has traversed the given edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_segment_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_segment_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_segment_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_segment_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getAggregateEdgeLinkMetrics": {
      "post": {
        "summary": "Get aggregate Edge link metrics across enterprises",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets aggregate link metrics for the request interval for all active links across all enterprises, where a link is considered to be active if an Edge has reported any activity for it in the last 24 hours. On success, returns an array of network utilization metrics, one per link.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "operationId": "monitoring_get_aggregate_edge_link_metrics",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_aggregate_edge_link_metrics",
              "properties": {
                "enterprises": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "metrics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "monitoring_get_aggregate_edge_link_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_aggregate_edge_link_metrics_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getAggregateEnterpriseEvents": {
      "post": {
        "summary": "Get events across all enterprises",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets events across all enterprises in a paginated list. When called in the MSP/Partner context, queries only enterprises managed by the MSP.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "monitoring_get_aggregate_enterprise_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_aggregate_enterprise_events",
              "properties": {
                "detail": {
                  "type": "boolean"
                },
                "interval": {
                  "type": "object",
                  "required": [
                    "start"
                  ],
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date"
                    },
                    "end": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                },
                "filter": {
                  "type": "object",
                  "required": [
                    "limit"
                  ],
                  "properties": {
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_get_aggregate_enterprise_events_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getAggregates": {
      "post": {
        "summary": "Get aggregate enterprise and edge information",
        "description": "Retrieve a comprehensive listing of all enterprises and edges on a network. Returns an object containing an aggregate `edgeCount`, a list (`enterprises`) containing enterprise objects, and a map (`edges`) which gives edge counts per enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "monitoring"
        ],
        "operationId": "monitoring_get_aggregates",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_aggregates",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_get_aggregates_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseBgpPeerStatus": {
      "post": {
        "summary": "Get gateway BGP peer status for all enterprise gateways",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Returns an array where each entry corresponds to a gateway and contains an associated set of BGP peers with state records.\n\nPrivileges required:\n\n`READ` `NETWORK_SERVICE`",
        "operationId": "monitoring_get_enterprise_bgp_peer_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "monitoring_get_enterprise_bgp_peer_status_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_bgp_peer_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeBgpPeerStatus": {
      "post": {
        "summary": "Get edge BGP peer status for all enterprise edges",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Returns an array where each entry corresponds to an edge and contains an associated set of BGP peers and state records.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "monitoring_get_enterprise_edge_bgp_peer_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "EDGE"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "monitoring_get_enterprise_edge_bgp_peer_status_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_edge_bgp_peer_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeLinkStatus": {
      "post": {
        "summary": "Get edge and link status data",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Get current edge and edge-link status for all enterprise edges.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "operationId": "monitoring_get_enterprise_edge_link_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterprises": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "links": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_edge_link_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/deleteNetworkGatewayPool": {
      "post": {
        "summary": "Delete gateway pool",
        "description": "Deletes the specified gateway pool (by `id`).\n\nPrivileges required:\n\n`DELETE` `GATEWAY`",
        "operationId": "network_delete_network_gateway_pool",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "GATEWAY"
            }
          ]
        },
        "tags": [
          "network",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_delete_network_gateway_pool",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "alias for `gatewayPoolId`"
                },
                "gatewayPoolId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/network_delete_network_gateway_pool_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkConfigurations": {
      "post": {
        "summary": "Get operator configuration profiles",
        "tags": [
          "all",
          "network"
        ],
        "description": "Gets all operator configuration profiles associated with an operator's network. Optionally includes the modules associated with each profile. This call does not return templates.\n\nPrivileges required:\n\n`READ` `OPERATOR_PROFILE`",
        "operationId": "network_get_network_configurations",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_configurations",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "modules",
                      "counts"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_configurations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_configurations_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkEnterprises": {
      "post": {
        "summary": "Get a list of the enterprises on a network",
        "description": "Get the enterprises existing on a network, optionally including all edges or edge counts. The `edgeConfigUpdate` \"with\" option may also be passed to check whether application of configuration updates to edges is enabled for each enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "network"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "network_get_network_enterprises",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_enterprises",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "edgeConfigUpdate"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_enterprises_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_enterprises_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkGatewayPools": {
      "post": {
        "summary": "Get list of gateway pools",
        "tags": [
          "all",
          "network"
        ],
        "description": "Get list of gateway pools associated with a network, optionally with the gateways or enterprises belonging to each pool.\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "operationId": "network_get_network_gateway_pools",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_gateway_pools",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "gateways",
                      "enterprises"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_gateway_pools_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_gateway_pools_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkGateways": {
      "post": {
        "summary": "Get list of gateways",
        "description": "Get list of gateways associated with a network.\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "network_get_network_gateways",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_gateways",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "site",
                      "pools",
                      "enterprises",
                      "enterpriseAssociations",
                      "datacenters",
                      "certificates",
                      "handOffEdges",
                      "roles"
                    ]
                  }
                }
              },
              "required": [
                "networkId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_gateways_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_gateways_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkOperatorUsers": {
      "post": {
        "summary": "Get list of operator users for a network",
        "description": "Get a list of all of the operator users associated with a network\n\nPrivileges required:\n\n`READ` `OPERATOR_USER`",
        "tags": [
          "all",
          "network"
        ],
        "operationId": "network_get_network_operator_users",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_operator_users",
              "properties": {
                "networkId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_operator_users_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_operator_users_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/insertNetworkGatewayPool": {
      "post": {
        "summary": "Insert a gateway pool",
        "description": "Insert a gateway pool, associated with a network.\n\nPrivileges required:\n\n`CREATE` `GATEWAY`",
        "tags": [
          "network",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "GATEWAY"
            }
          ]
        },
        "operationId": "network_insert_network_gateway_pool",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_insert_network_gateway_pool",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "handOffType": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "ALLOW",
                    "ONLY"
                  ]
                }
              },
              "required": [
                "name",
                "networkId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/network_insert_network_gateway_pool_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/updateNetworkGatwayPoolAttributes": {
      "post": {
        "summary": "Update gateway pool attributes",
        "description": "Update the configurable attributes of a Gateway Pool. Configurarable attributes are `name`, `description`, and `handOffType`.\n\nPrivileges required:\n\n`UPDATE` `GATEWAY`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "network_update_network_gateway_pool_attributes",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_update_network_gateway_pool_attributes",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "alias for `gatewayPoolId`"
                },
                "gatewayPoolId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "handOffType": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "ALLOW",
                    "ONLY"
                  ]
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/network_update_network_gateway_pool_attributes_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/deleteOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Delete an operator user",
        "description": "Delete an operator user object by `id` or `username`.\n\nPrivileges required:\n\n`DELETE` `OPERATOR_USER`",
        "operationId": "operator_user_delete_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_delete_operator_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_delete_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/getOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get an operator user",
        "description": "Get an operator user object by `id` or `username`.\n\nPrivileges required:\n\n`READ` `OPERATOR_USER`",
        "operationId": "operator_user_get_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "OPERATOR_USER",
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_get_operator_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_get_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/insertOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Insert an operator user",
        "description": "Insert an operator user and associate with an operator's network.\n\nPrivileges required:\n\n`CREATE` `OPERATOR_USER`",
        "operationId": "operator_user_insert_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/operator_user_insert_operator_user"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_get_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/updateOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Update an operator user",
        "description": "Update an operator user provided an object `id` or `username`, and an `_update` object containing the names and values, of columns to be updated.\n\nPrivileges required:\n\n`UPDATE` `OPERATOR_USER`",
        "operationId": "operator_user_update_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "OPERATOR_USER",
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_update_operator_user",
              "properties": {
                "_update": {
                  "$ref": "#/definitions/operator_user_with_role_info"
                },
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_update_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/createRoleCustomization": {
      "post": {
        "summary": "Create a role customization",
        "tags": [
          "all",
          "role"
        ],
        "description": "Create a role customization given a roleId and an array of privilegeIds.\n\nPrivileges required:\n\n`UPDATE` `NETWORK`",
        "operationId": "role_create_role_customization",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_create_role_customization",
              "properties": {
                "forRoleId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "userId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "operatorId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "privilegeIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "forRoleId",
                "privilegeIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_create_role_customization_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/deleteRoleCustomization": {
      "post": {
        "summary": "Delete a role customization",
        "tags": [
          "all",
          "role"
        ],
        "description": "Delete a role customization, given a role customization name or forRoleId.\n\nPrivileges required:\n\n`UPDATE` `NETWORK`",
        "operationId": "role_delete_role_customization",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_delete_role_customization",
              "properties": {
                "forRoleId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "userId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "operatorId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                }
              },
              "required": [
                "forRoleId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_delete_role_customization_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/getUserTypeRoles": {
      "post": {
        "summary": "Get the roles defined for a user type",
        "tags": [
          "all",
          "role"
        ],
        "description": "Return the defined roles for a specified user type.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_USER`, or\n\n`READ` `PROXY_USER`, or\n\n`READ` `OPERATOR_USER`",
        "operationId": "role_get_user_type_roles",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_USER",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "PROXY_USER",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "OPERATOR_USER",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_get_user_type_roles",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "OPERATOR",
                    "MSP",
                    "PARTNER",
                    "ENTERPRISE",
                    "END_USER",
                    "CUSTOM"
                  ]
                },
                "networkId": {
                  "type": "integer"
                }
              },
              "required": [
                "userType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "role_get_user_type_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/role_get_user_type_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseDelegatedToEnterpriseProxy": {
      "post": {
        "summary": "Grant enterprise access to partner",
        "description": "Grants enterprise access to the specified enterprise proxy (partner). When an enterprise is delegated to a proxy, proxy users are granted access to view, configure, and troubleshoot Edges owned by the enterprise. As a security consideration, proxy Support users cannot view personally identifiable information.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_delegated_to_enterprise_proxy",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_delegated_to_enterprise_proxy_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseDelegatedToOperator": {
      "post": {
        "summary": "Grant enterprise access to network operator",
        "description": "Grants enterprise access to the network operator. When an enterprise is delegated to the operator, operator users are permitted to view, configure, and troubleshoot Edges owned by the enterprise. As a security consideration, operator users cannot view personally identifiable information.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_delegated_to_operator",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_delegated_to_operator_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseProxyDelegatedToOperator": {
      "post": {
        "summary": "Grant enterprise proxy access to network operator",
        "description": "Grants enterprise proxy access to the network operator. When an enterprise proxy is delegated to the operator, operator users are granted access to view, configure and troubleshoot objects owned by the proxy.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROXY_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_proxy_delegated_to_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROXY_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_proxy_delegated_to_operator_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseUserManagementDelegatedToOperator": {
      "post": {
        "summary": "Grant enterprise user access to the network operator",
        "description": "When enterprise user management is delegated to the operator, operator users are granted enterprise-level user management capabilities (user creation, password resets, etc.).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_user_management_delegated_to_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_user_management_delegated_to_operator_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/getSystemProperties": {
      "post": {
        "summary": "Get all system properties",
        "description": "Get a list of all configured system properties.\n\nPrivileges required:\n\n`READ` `SYSTEM_PROPERTY`",
        "operationId": "system_property_get_system_properties",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_get_system_properties",
              "properties": {
                "group": {
                  "type": "string",
                  "description": "Filter for properties matching a given group prefix"
                },
                "normalize": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/system_property_get_system_properties_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/getSystemProperty": {
      "post": {
        "summary": "Get system property",
        "description": "Get a system property by object id or other attribute.\n\nPrivileges required:\n\n`READ` `SYSTEM_PROPERTY`",
        "operationId": "system_property_get_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_get_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_get_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/insertOrUpdateSystemProperty": {
      "post": {
        "summary": "Insert or update a system property",
        "description": "Insert a system property. If property with the given name already exists, the property will be updated.\n\nPrivileges required:\n\n`CREATE` `SYSTEM_PROPERTY`",
        "operationId": "system_property_insert_or_update_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_insert_or_update_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "defaultValue": {
                  "type": "string"
                },
                "isPassword": {
                  "type": "boolean"
                },
                "isReadOnly": {
                  "type": "boolean"
                },
                "dataType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_insert_or_update_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/insertSystemProperty": {
      "post": {
        "summary": "Insert a system property",
        "description": "Insert a new system property.\n\nPrivileges required:\n\n`CREATE` `SYSTEM_PROPERTY`",
        "operationId": "system_property_insert_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_insert_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "defaultValue": {
                  "type": "string"
                },
                "dataType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isPassword": {
                  "type": "boolean"
                },
                "isReadOnly": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_insert_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/updateSystemProperty": {
      "post": {
        "summary": "Update a system property",
        "description": "Update an existing system property, provided an object `id` or other identifying attributes\n\nPrivileges required:\n\n`UPDATE` `SYSTEM_PROPERTY`",
        "operationId": "system_property_update_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_update_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "defaultValue": {
                      "type": "string"
                    },
                    "isPassword": {
                      "type": "boolean"
                    },
                    "isReadOnly": {
                      "type": "boolean"
                    },
                    "dataType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_update_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/associateEdge": {
      "post": {
        "summary": "Return inventory items available at this VCO",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Assigns an edge in the inventory to an Enterprise. To perform the action, the edge should already be in a STAGING state. The assignment can be done at an enterprise level, without selecting a destination Edge profile. In such a case, the inventory edge is assigned to a staging profile within the Enterprise. Optionally a profile or destination edge can be assigned to this inventory edge. The edge in the inventory can be assigned to any profile. The inventory edge can be assigned to an Enterprise edge only if it is in a PENDING/REACTIVATION_PENDING state.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE`",
        "operationId": "vco_inventory_associate_edge",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_associate_edge",
              "properties": {
                "edgeInventoryId": {
                  "type": "integer",
                  "required": false
                },
                "enterpriseId": {
                  "type": "integer",
                  "required": false
                },
                "edgeId": {
                  "type": "integer",
                  "required": false
                },
                "deviceSerialNumber": {
                  "type": "string",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "deviceSerialNumber": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/getInventoryItems": {
      "post": {
        "summary": "Return inventory items available at this VCO",
        "tags": [
          "all",
          "inventoryManagement"
        ],
        "description": "Retrieve all the inventory information available with this VCO. This method does not have required parameters. The optional parameters are \nenterpriseId - Return inventory items belonging to that enterprise. If the caller context is an enterprise, this value will be taken from token itself.\nmodifiedSince - Used to retrieve inventory items that have been modified in the last modifiedSince hours.\nwith - an array containing the string \"edge\" to get details about details about the provisioned edge if any.\n\nPrivileges required:\n\n`READ` `INVENTORY`",
        "operationId": "vco_inventory_get_inventory_items",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "INVENTORY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_get_inventory_items",
              "properties": {
                "enterpriseId": {
                  "type": "integer",
                  "required": false
                },
                "modifiedSince": {
                  "type": "integer",
                  "required": false
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edge",
                      "vcoOwner"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/vco_inventory_get_inventory_items_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vpn/generateVpnGatewayConfiguration": {
      "post": {
        "summary": "Provision a non-SD-WAN VPN site",
        "description": "Provision a non-SD-WAN site (e.g. a data center or cloud service PoP) and generate VPN configuration.\n\nPrivileges required:\n\n`CREATE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "vpn"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "vpn_generate_vpn_gateway_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vpn_generate_vpn_gateway_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/definitions/data_center_data"
                }
              },
              "required": [
                "name",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/vpn_generate_vpn_gateway_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "A JSON-RPC error code (see http://www.jsonrpc.org/specification#error_object for details)",
              "example": -32600
            },
            "message": {
              "type": "string",
              "example": "An error occurred while processing your request"
            }
          },
          "required": [
            "code",
            "message"
          ]
        }
      },
      "required": [
        "error"
      ]
    },
    "logicalid_reference": {
      "type": "object",
      "properties": {
        "logicalId": {
          "type": "string"
        }
      }
    },
    "subnet": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        }
      }
    },
    "enterprise": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "networkId": {
          "type": "integer"
        },
        "gatewayPoolId": {
          "type": "integer"
        },
        "alertsEnabled": {
          "type": "boolean"
        },
        "operatorAlertsEnabled": {
          "type": "boolean"
        },
        "endpointPkiMode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ]
        },
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "contactMobile": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "streetAddress2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        },
        "timezone": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "configuration_enterprise": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "type": "object",
          "properties": {
            "configurationAssociationId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "enterprise_with_proxy_attributes": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            },
            "enterpriseProxyName": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "created",
            "networkId",
            "gatewayPoolId",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "endpointPkiMode",
            "name",
            "domain",
            "prefix",
            "logicalId",
            "accountNumber",
            "description",
            "contactName",
            "contactPhone",
            "contactMobile",
            "contactEmail",
            "streetAddress",
            "streetAddress2",
            "city",
            "state",
            "postalCode",
            "country",
            "lat",
            "lon",
            "timezone",
            "locale",
            "modified"
          ]
        }
      ]
    },
    "enterprise_proxy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "networkId": {
          "type": "integer"
        },
        "proxyType": {
          "type": "string",
          "enum": [
            "PARTNER",
            "MSP"
          ]
        },
        "operateGateways": {
          "type": "boolean"
        },
        "logicalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "contactMobile": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "streetAddress2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_alert_configuration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "alertDefinitionId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT"
          ]
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT"
          ]
        },
        "definition": {
          "$ref": "#/definitions/enterprise_alert_definition"
        },
        "firstNotificationSeconds": {
          "type": "integer"
        },
        "maxNotifications": {
          "type": "integer"
        },
        "notificationIntervalSeconds": {
          "type": "integer"
        },
        "resetIntervalSeconds": {
          "type": "integer"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_alert_definition": {
      "type": "object",
      "properties": {
        "isSystemOnly": {
          "type": "boolean"
        },
        "isOperatorOnly": {
          "type": "boolean"
        }
      }
    },
    "enterprise_alert_trigger": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "triggerTime": {
          "type": "string",
          "format": "date-time"
        },
        "enterpriseAlertConfigurationId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeName": {
          "type": "string"
        },
        "linkId": {
          "type": "integer"
        },
        "linkName": {
          "type": "string"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "enterpriseObjectName": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT"
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "PENDING",
            "ACTIVE",
            "CLOSED"
          ]
        },
        "stateSetTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "firstNotificationSeconds": {
          "type": "integer"
        },
        "maxNotifications": {
          "type": "integer"
        },
        "notificationIntervalSeconds": {
          "type": "integer"
        },
        "resetIntervalSeconds": {
          "type": "integer"
        },
        "comment": {
          "type": "string"
        },
        "nextNotificationTime": {
          "type": "string",
          "format": "date-time"
        },
        "remainingNotifications": {
          "type": "integer"
        },
        "timezone": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_object_base": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "operatorId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "gatewayId": {
          "type": "integer"
        },
        "parentGroupId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "alertsEnabled": {
          "type": "boolean"
        },
        "operatorAlertsEnabled": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "statusModified": {
          "type": "string",
          "format": "date-time"
        },
        "previousData": {
          "type": "object"
        },
        "previousCreated": {
          "type": "string",
          "format": "date-time"
        },
        "draftData": {
          "type": "string"
        },
        "draftCreated": {
          "type": "string",
          "format": "date-time"
        },
        "draftComment": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "created",
        "operatorId",
        "networkId",
        "enterpriseId",
        "edgeId",
        "gatewayId",
        "parentGroupId",
        "description",
        "object",
        "name",
        "type",
        "logicalId",
        "alertsEnabled",
        "operatorAlertsEnabled",
        "status",
        "statusModified",
        "previousData",
        "previousCreated",
        "draftData",
        "draftCreated",
        "draftComment",
        "data",
        "lastContact",
        "version",
        "modified"
      ]
    },
    "event_base": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time"
        },
        "event": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": [
            "SYSTEM",
            "NETWORK",
            "APPLICATION",
            "USER",
            "SECURITY",
            "EDGE",
            "GATEWAY",
            "CONFIGURATION",
            "ENTERPRISE"
          ]
        },
        "severity": {
          "type": "string",
          "enum": [
            "EMERGENCY",
            "ALERT",
            "CRITICAL",
            "ERROR",
            "WARNING",
            "NOTICE",
            "INFO",
            "DEBUG"
          ]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "enterprise_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "detail": {
              "type": "string"
            },
            "enterpriseUsername": {
              "type": "string"
            },
            "edgeName": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "message",
            "detail",
            "enterpriseUsername",
            "edgeName"
          ]
        }
      ]
    },
    "operator_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "detail": {
              "type": "string"
            },
            "operatorUsername": {
              "type": "string"
            },
            "networkName": {
              "type": "string"
            },
            "gatewayName": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "message",
            "detail",
            "operatorUsername",
            "networkName",
            "gatewayName"
          ]
        }
      ]
    },
    "aggregate_enterprise_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseName": {
              "type": "string"
            },
            "enterpriseUsername": {
              "type": "string"
            },
            "edgeName": {
              "type": "string"
            },
            "detail": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "message",
            "enterpriseId",
            "enterpriseName",
            "enterpriseUsername",
            "edgeName",
            "detail"
          ]
        }
      ]
    },
    "gateway_pool_gateway": {
      "type": "object",
      "properties": {
        "gatewayPoolAssocId": {
          "type": "integer"
        },
        "poolName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "siteId": {
          "type": "integer"
        },
        "activationKey": {
          "type": "string"
        },
        "activationState": {
          "type": "string"
        },
        "activationTime": {
          "type": "string",
          "format": "date-time"
        },
        "softwareVersion": {
          "type": "string"
        },
        "buildNumber": {
          "type": "string"
        },
        "utilization": {
          "type": "number"
        },
        "utilizationDetail": {
          "type": "object",
          "properties": {
            "load": {
              "type": "number"
            },
            "overall": {
              "type": "number"
            },
            "cpu": {
              "type": "number"
            },
            "memory": {
              "type": "number"
            }
          }
        },
        "connectedEdges": {
          "type": "integer"
        },
        "connectedEdgeList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "vceid": {
                "type": "string"
              }
            }
          }
        },
        "deviceId": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "gatewayState": {
          "type": "string"
        },
        "alertsEnabled": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "dnsName": {
          "type": "string"
        },
        "isLoadBalanced": {
          "type": "integer"
        },
        "privateIpAddress": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "systemUpSince": {
          "type": "string",
          "format": "date-time"
        },
        "serviceUpSince": {
          "type": "string",
          "format": "date-time"
        },
        "serviceState": {
          "type": "string"
        },
        "endpointPkiMode": {
          "type": "string"
        },
        "handOffDetail": {
          "$ref": "#/definitions/gateway_handoff_detail"
        },
        "ipsecGatewayDetail": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "strictHostCheck": {
              "type": "boolean"
            },
            "strictHostCheckDN": {
              "type": "string"
            }
          }
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gateway_handoff_detail": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "subnets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "routeCost": {
                "type": "integer"
              },
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "integer"
              },
              "encrypt": {
                "type": "boolean"
              },
              "handOffType": {
                "type": "string",
                "enum": [
                  "NAT",
                  "VLAN"
                ]
              }
            }
          }
        },
        "icmpProbe": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "probeType": {
              "type": "string"
            },
            "cTag": {
              "type": "integer"
            },
            "sTag": {
              "type": "integer"
            },
            "destinationIp": {
              "type": "string"
            },
            "frequencySeconds": {
              "type": "integer"
            },
            "threshold": {
              "type": "integer"
            }
          }
        },
        "icmpResponder": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ipAddress": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            }
          }
        }
      }
    },
    "gateway_handoff_ipsec_gateway_detail": {
      "type": "object",
      "properties": {
        "ipsecGatewayAddress": {
          "type": "string"
        },
        "strictHostCheck": {
          "type": "boolean"
        },
        "strictHostCheckDN": {
          "type": "string"
        }
      },
      "required": [
        "ipsecGatewayAddress"
      ]
    },
    "gateway_pool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "handOffType": {
          "type": "string",
          "enum": [
            "NONE",
            "ALLOW",
            "ONLY"
          ]
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "link": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "edgeId": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "internalId": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "networkSide": {
          "type": "string",
          "enum": [
            "UNKOWN",
            "WAN",
            "LAN"
          ]
        },
        "networkType": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "WIRELESS",
            "ETHERNET",
            "WIFI"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "isp": {
          "type": "string"
        },
        "org": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        },
        "lastActive": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ]
        },
        "backupState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STANDBY",
            "ACTIVE"
          ]
        },
        "vpnState": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DEAD",
            "STANDBY"
          ]
        },
        "lastEvent": {
          "type": "string",
          "format": "date-time"
        },
        "lastEventState": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ]
        },
        "alertsEnabled": {
          "type": "integer"
        },
        "operatorAlertsEnabled": {
          "type": "integer"
        },
        "serviceState": {
          "type": "string",
          "enum": [
            "IN_SERVICE",
            "OUT_OF_SERVICE",
            "HISTORICAL"
          ]
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "serviceGroups": {
          "$ref": "#/definitions/link_service_groups"
        }
      },
      "required": [
        "id",
        "created",
        "edgeId",
        "logicalId",
        "internalId",
        "interface",
        "macAddress",
        "ipAddress",
        "netmask",
        "networkSide",
        "networkType",
        "displayName",
        "isp",
        "org",
        "lat",
        "lon",
        "lastActive",
        "state",
        "backupState",
        "vpnState",
        "lastEvent",
        "lastEventState",
        "alertsEnabled",
        "operatorAlertsEnabled",
        "serviceState",
        "modified"
      ]
    },
    "client_device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "macAddress": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "os": {
          "type": "integer"
        },
        "osName": {
          "type": "string"
        },
        "osVersion": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "deviceModel": {
          "type": "string"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "created",
        "enterpriseId",
        "macAddress",
        "hostName",
        "ipAddress",
        "os",
        "osName",
        "osVersion",
        "deviceType",
        "deviceModel",
        "lastContact",
        "modified"
      ]
    },
    "link_quality_object": {
      "type": "object",
      "properties": {
        "distribution": {
          "$ref": "#/definitions/link_quality_object_distribution"
        },
        "sampleCount": {
          "type": "integer"
        },
        "sampleLength": {
          "type": "integer"
        },
        "score": {
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        },
        "timeseries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/link_quality_object_timeseries_data"
          }
        },
        "totalScore": {
          "type": "number"
        }
      },
      "required": [
        "distribution",
        "sampleCount",
        "sampleLength",
        "score",
        "timeseries",
        "totalScore"
      ]
    },
    "link_quality_object_distribution": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "type": "number"
        }
      }
    },
    "link_quality_object_timeseries_data": {
      "type": "object",
      "properties": {
        "before": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "after": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "metadata": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "object",
              "properties": {
                "latencyMsRx": {
                  "type": "integer"
                },
                "latencyMsTx": {
                  "type": "integer"
                },
                "lossPctRx": {
                  "type": "integer"
                },
                "lossPctTx": {
                  "type": "integer"
                },
                "jitterMsRx": {
                  "type": "integer"
                },
                "jitterMsTx": {
                  "type": "integer"
                }
              }
            },
            "metrics": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "trafficType": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ]
                  },
                  "action": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  },
                  "metric": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "beforeState": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  },
                  "afterState": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  }
                }
              }
            },
            "stateMap": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "before": {
                      "type": "integer"
                    },
                    "after": {
                      "type": "integer"
                    },
                    "action": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "timestamp": {
          "type": "integer"
        }
      },
      "required": [
        "after",
        "metadata",
        "timestamp"
      ]
    },
    "enterprise_route": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "exitType": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeName": {
          "type": "string"
        },
        "profileId": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "advertise": {
          "type": "boolean"
        }
      }
    },
    "vlan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "vlanId": {
          "type": "integer"
        },
        "staticReserved": {
          "type": "integer"
        }
      }
    },
    "enterprise_network_space": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "static",
            "dynamic"
          ]
        },
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "maxVlans": {
          "type": "integer"
        },
        "vlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vlan"
          }
        }
      }
    },
    "enterprise_service": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "configurationId": {
          "type": "integer"
        },
        "moduleId": {
          "type": "integer"
        },
        "ref": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "version": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "dns": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_service"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/dns_data"
            }
          }
        }
      ]
    },
    "dns_data": {
      "type": "object",
      "properties": {
        "primary": {
          "type": "string"
        },
        "secondary": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "rule": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "segment": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_service"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/segment_data"
            }
          }
        }
      ]
    },
    "segment_data": {
      "type": "object",
      "properties": {
        "segmentId": {
          "type": "integer"
        },
        "delegateToEnterprise": {
          "type": "boolean"
        },
        "delegateToEnterpriseProxy": {
          "type": "boolean"
        }
      }
    },
    "enterprise_service_network": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_service"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/enterprise_service_network_data"
            }
          }
        }
      ]
    },
    "enterprise_service_network_data": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "string"
        },
        "spaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "integer"
              },
              "maxVlans": {
                "type": "integer"
              },
              "mode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "branchCidrPrefix": {
                "type": "integer"
              },
              "guest": {
                "type": "boolean"
              },
              "vlans": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "vlanId": {
                      "type": "integer"
                    },
                    "advertise": {
                      "type": "boolean"
                    },
                    "cost": {
                      "type": "integer"
                    },
                    "staticReserved": {
                      "type": "integer"
                    },
                    "dhcp": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "leaseTimeSeconds": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "configuration_module": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "enum": [
            "imageUpdate",
            "controlPlane",
            "managementPlane",
            "firewall",
            "QOS",
            "deviceSettings",
            "WAN",
            "metaData",
            "properties"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "ENTERPRISE",
            "OPERATOR",
            "GATEWAY"
          ]
        },
        "description": {
          "type": "string"
        },
        "configurationId": {
          "type": "integer"
        },
        "data": {
          "type": "object"
        },
        "refs": {
          "type": "object"
        }
      },
      "discriminator": "name"
    },
    "genericRefs": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/enterprise_service"
      }
    },
    "imageUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/image_update_data"
            }
          },
          "required": [
            "name",
            "data"
          ]
        }
      ]
    },
    "image_update_data": {
      "type": "object",
      "properties": {
        "buildNumber": {
          "type": "string"
        },
        "profileDeviceFamily": {
          "type": "string"
        },
        "profileVersion": {
          "type": "string"
        },
        "softwarePackageId": {
          "type": "integer"
        },
        "softwarePackageName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "windowDurationMins": {
          "type": "integer"
        },
        "windowed": {
          "type": "boolean"
        }
      }
    },
    "controlPlane": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/control_plane_data"
            }
          },
          "required": [
            "name",
            "data"
          ]
        }
      ]
    },
    "control_plane_data": {
      "type": "object",
      "properties": {
        "gatewaySelection": {
          "type": "object",
          "properties": {
            "mode": {
              "type": "string"
            },
            "primary": {
              "type": "string"
            },
            "primaryDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "secondary": {
              "type": "string"
            },
            "secondaryDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "super": {
              "type": "string"
            },
            "superDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "vpn": {
          "type": "object",
          "properties": {
            "dataCenterEdges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "logicalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "edgeToDataCenter": {
              "type": "boolean"
            },
            "edgeToEdge": {
              "type": "boolean"
            },
            "edgeToEdgeDetail": {
              "type": "object",
              "properties": {
                "dynamic": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "timeout": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "encryptionProtocol": {
                  "type": "string"
                },
                "profileIsolation": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "isolateDynamic": {
                      "type": "boolean"
                    }
                  }
                },
                "useCloudGateway": {
                  "type": "boolean"
                },
                "vpnHubs": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "autoSelectVpnHubs": {
                  "type": "boolean"
                }
              }
            },
            "edgeToEdgeList": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isolateDynamic": {
                    "type": "integer"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "profileLogicalId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "ipsecGatewayDetail": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "strictHostCheck": {
                "type": "boolean"
              },
              "strictHostCheckDN": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "managementPlane": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/management_plane_data"
            }
          },
          "required": [
            "name",
            "data"
          ]
        }
      ]
    },
    "management_plane_data": {
      "type": "object",
      "properties": {
        "heartBeatSeconds": {
          "type": "integer"
        },
        "managementPlaneProxy": {
          "type": "object",
          "properties": {
            "primary": {
              "type": "string"
            },
            "secondary": {
              "type": "string"
            }
          }
        },
        "statsUploadSeconds": {
          "type": "integer"
        },
        "timeSliceSeconds": {
          "type": "integer"
        }
      }
    },
    "firewall": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/firewall_data"
            }
          },
          "required": [
            "name",
            "data"
          ]
        }
      ]
    },
    "firewall_data": {
      "type": "object",
      "properties": {
        "firewall_enabled": {
          "type": "boolean"
        },
        "firewall_logging_enabled": {
          "type": "boolean"
        },
        "inbound": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_inbound_rule"
          }
        },
        "outbound": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_outbound_rule"
          }
        },
        "services": {
          "type": "object",
          "properties": {
            "loggingEnabled": {
              "type": "boolean"
            },
            "ssh": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled"
              ]
            },
            "localUi": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of IP addresses allowed UI access"
                },
                "portNumber": {
                  "type": "integer"
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "portNumber"
              ]
            },
            "snmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of IP addresses allowed SNMP access"
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled"
              ]
            },
            "icmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of IP addresses allowed ICMP access"
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled"
              ]
            }
          },
          "required": [
            "loggingEnabled"
          ]
        }
      },
      "required": [
        "firewall_enabled",
        "firewall_logging_enabled",
        "inbound",
        "outbound",
        "services"
      ]
    },
    "firewall_inbound_rule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/firewall_rule_match"
        },
        "action": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "port_forwarding",
                "one_to_one_nat"
              ]
            },
            "nat": {
              "type": "object",
              "properties": {
                "lan_ip": {
                  "type": "string"
                },
                "lan_port": {
                  "type": "integer"
                },
                "outbound": {
                  "type": "boolean"
                }
              },
              "required": [
                "lan_ip"
              ]
            },
            "interface": {
              "type": "string",
              "description": "The name of the interface from which traffic should be forwarded"
            },
            "subinterfaceId": {
              "type": "integer"
            }
          },
          "required": [
            "type",
            "nat",
            "interface"
          ]
        },
        "ruleLogicalId": {
          "type": "string"
        }
      },
      "required": [
        "match",
        "action"
      ]
    },
    "firewall_outbound_rule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/firewall_rule_match"
        },
        "action": {
          "type": "object",
          "properties": {
            "allow_or_deny": {
              "type": "string",
              "enum": [
                "allow",
                "deny"
              ]
            }
          }
        },
        "ruleLogicalId": {
          "type": "string"
        }
      },
      "required": [
        "match",
        "action"
      ]
    },
    "firewall_rule_match": {
      "type": "object",
      "properties": {
        "appid": {
          "type": "integer",
          "description": "Integer ID corresponding to an application in the network-level application map"
        },
        "classid": {
          "type": "integer",
          "description": "Integer ID corresponding to an application class in the network-level application map"
        },
        "dscp": {
          "type": "integer",
          "description": "Integer ID indicating DSCP classification"
        },
        "sip": {
          "type": "string",
          "description": "Source IP address"
        },
        "sport_high": {
          "type": "integer",
          "description": "Upper bound of a source port range"
        },
        "sport_low": {
          "type": "integer",
          "description": "Lower bound of a source port range"
        },
        "ssm": {
          "type": "string",
          "description": "Source subnet mask, e.g. 255.255.255.0"
        },
        "smac": {
          "type": "string",
          "description": "Source MAC address"
        },
        "svlan": {
          "type": "integer",
          "description": "Integer ID for the source VLAN"
        },
        "os_version": {
          "type": "integer"
        },
        "hostname": {
          "type": "string"
        },
        "dip": {
          "type": "string",
          "description": "Destination IP address"
        },
        "dport_low": {
          "type": "integer",
          "description": "Lower bound of a destination port range"
        },
        "dport_high": {
          "type": "integer",
          "description": "Upper bound of a destination port range"
        },
        "dsm": {
          "type": "string",
          "description": "Destination subnet mask e.g. 255.255.255.0"
        },
        "dmac": {
          "type": "string",
          "description": "Destination MAC address"
        },
        "dvlan": {
          "type": "integer",
          "description": "Integer ID for the destination VLAN"
        },
        "proto": {
          "type": "integer",
          "description": "Integer ID corresponding to a protocol"
        }
      }
    },
    "edgeQOS": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/edgeQOSData"
            },
            "refs": {
              "$ref": "#/definitions/genericRefs"
            }
          }
        }
      ]
    },
    "edgeQOSData": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "match": {
                "type": "object",
                "properties": {
                  "appid": {
                    "type": "integer"
                  },
                  "classid": {
                    "type": "integer"
                  },
                  "dscp": {
                    "type": "integer"
                  },
                  "sip": {
                    "type": "string"
                  },
                  "sport_high": {
                    "type": "integer"
                  },
                  "sport_low": {
                    "type": "integer"
                  },
                  "ssm": {
                    "type": "string"
                  },
                  "svlan": {
                    "type": "integer"
                  },
                  "os_version": {
                    "type": "integer"
                  },
                  "hostname": {
                    "type": "string"
                  },
                  "dip": {
                    "type": "string"
                  },
                  "dport_low": {
                    "type": "integer"
                  },
                  "dport_high": {
                    "type": "integer"
                  },
                  "dsm": {
                    "type": "string"
                  },
                  "dvlan": {
                    "type": "integer"
                  },
                  "proto": {
                    "type": "integer"
                  }
                }
              },
              "action": {
                "type": "object",
                "properties": {
                  "routeType": {
                    "type": "string"
                  },
                  "edge2EdgeRouteAction": {
                    "$ref": "#/definitions/route_action_object"
                  },
                  "edge2DataCenterRouteAction": {
                    "$ref": "#/definitions/route_action_object"
                  },
                  "edge2CloudRouteAction": {
                    "$ref": "#/definitions/route_action_object"
                  },
                  "QoS": {
                    "type": "object"
                  },
                  "sla": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "defaults": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "webProxy": {
          "type": "object",
          "properties": {
            "providers": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "serviceRateLimit": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "inputType": {
              "type": "string"
            },
            "value": {
              "type": "integer"
            }
          }
        },
        "cosMapping": {
          "type": "object",
          "properties": {
            "lsInputType": {
              "type": "string"
            },
            "bulk": {
              "$ref": "#/definitions/cos_mapping"
            },
            "realtime": {
              "$ref": "#/definitions/cos_mapping"
            },
            "transactional": {
              "$ref": "#/definitions/cos_mapping"
            }
          }
        }
      }
    },
    "route_action_object": {
      "type": "object",
      "properties": {
        "interface": {
          "type": "string"
        },
        "linkInternalLogicalId": {
          "type": "string"
        },
        "linkPolicy": {
          "type": "string"
        },
        "routeCfg": {
          "type": "object"
        },
        "routePolicy": {
          "type": "string"
        },
        "serviceGroup": {
          "type": "string"
        },
        "vlanId": {
          "type": "integer"
        },
        "wanlink": {
          "type": "string"
        },
        "linkCosLogicalId": {
          "type": "string"
        },
        "linkOuterDscpTag": {
          "type": "string"
        },
        "linkInnerDscpTag": {
          "type": "string"
        }
      }
    },
    "cos_mapping": {
      "type": "object",
      "properties": {
        "high": {
          "$ref": "#/definitions/cos_mapping_value"
        },
        "normal": {
          "$ref": "#/definitions/cos_mapping_value"
        },
        "low": {
          "$ref": "#/definitions/cos_mapping_value"
        }
      }
    },
    "cos_mapping_value": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer"
        },
        "ratelimit": {
          "type": "boolean"
        }
      }
    },
    "edgeDeviceSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/edgeDeviceSettingsData"
            },
            "refs": {
              "$ref": "#/definitions/deviceSettingsRefs"
            }
          }
        }
      ]
    },
    "edgeDeviceSettingsData": {
      "type": "object",
      "properties": {
        "bgp": {
          "type": "object",
          "properties": {
            "ASN": {
              "type": "string"
            },
            "connectedRoutes": {
              "type": "boolean"
            },
            "disableASPathCarryOver": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "filters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/bgp_filter_rule"
                    }
                  }
                }
              }
            },
            "holdtime": {
              "type": "string"
            },
            "keepalive": {
              "type": "string"
            },
            "neighbors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/config_edge_bgp_neighbor"
              }
            },
            "networks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cidrIp": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  }
                }
              }
            },
            "overlayPrefix": {
              "type": "boolean"
            },
            "propagateUplink": {
              "type": "boolean"
            },
            "routerId": {
              "type": "string"
            },
            "uplinkCommunity": {
              "type": "integer"
            }
          }
        },
        "lan": {
          "type": "object",
          "properties": {
            "networks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "space": {
                    "type": "string"
                  },
                  "guest": {
                    "type": "boolean"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "advertise": {
                    "type": "boolean"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "dhcp": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "leaseTimeSeconds": {
                        "type": "integer"
                      },
                      "override": {
                        "type": "boolean"
                      },
                      "dhcpRelay": {
                        "type": "object",
                        "properties": {
                          "servers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "staticReserved": {
                    "type": "integer"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  },
                  "cidrIp": {
                    "type": "string"
                  },
                  "baseDhcpAddr": {
                    "type": "integer"
                  },
                  "numDhcpAddr": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "interfaces": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "vlanId": {
                    "type": "integer"
                  },
                  "managementIp": {
                    "type": "string"
                  },
                  "disabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "routedInterfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "addressing": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "DHCP",
                      "STATIC",
                      "PPPOE"
                    ]
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  },
                  "cidrIp": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "gateway": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "advertise": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "dhcpServer": {
                "$ref": "#/definitions/edgeDeviceSettingsDataDhcpServer"
              },
              "encryptOverlay": {
                "type": "boolean"
              },
              "l2": {
                "type": "object",
                "properties": {
                  "autonegotiation": {
                    "type": "boolean"
                  },
                  "speed": {
                    "type": "string"
                  },
                  "duplex": {
                    "type": "string"
                  },
                  "MTU": {
                    "type": "integer"
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "natDirect": {
                "type": "boolean"
              },
              "ospf": {
                "type": "object",
                "properties": {
                  "area": {
                    "type": "integer"
                  },
                  "authentication": {
                    "type": "boolean"
                  },
                  "authId": {
                    "type": "integer"
                  },
                  "authPassphrase": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "deadTimer": {
                    "type": "integer"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "helloTimer": {
                    "type": "integer"
                  },
                  "inboundRouteLearning": {
                    "type": "object",
                    "properties": {
                      "defaultAction": {
                        "type": "string"
                      },
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "md5Authentication": {
                    "type": "boolean"
                  },
                  "MTU": {
                    "type": "integer"
                  },
                  "outboundRouteAdvertisement": {
                    "type": "object",
                    "properties": {
                      "defaultAction": {
                        "type": "string"
                      },
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "passive": {
                    "type": "boolean"
                  },
                  "vlanId": {
                    "type": "integer"
                  }
                }
              },
              "override": {
                "type": "boolean"
              },
              "subinterfaces": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressing": {
                      "type": "object",
                      "properties": {
                        "cidrIp": {
                          "type": "string"
                        },
                        "cidrPrefix": {
                          "type": "integer"
                        },
                        "gateway": {
                          "type": "string"
                        },
                        "netmask": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "DHCP",
                            "STATIC",
                            "PPPOE"
                          ]
                        },
                        "username": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        }
                      }
                    },
                    "advertise": {
                      "type": "boolean"
                    },
                    "dhcpServer": {
                      "$ref": "#/definitions/edgeDeviceSettingsDataDhcpServer"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "natDirect": {
                      "type": "boolean"
                    },
                    "ospf": {
                      "type": "object",
                      "properties": {
                        "area": {
                          "type": "integer"
                        },
                        "authentication": {
                          "type": "boolean"
                        },
                        "authId": {
                          "type": "integer"
                        },
                        "authPassphrase": {
                          "type": "string"
                        },
                        "cost": {
                          "type": "integer"
                        },
                        "deadTimer": {
                          "type": "integer"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "helloTimer": {
                          "type": "integer"
                        },
                        "inboundRouteLearning": {
                          "type": "object",
                          "properties": {
                            "defaultAction": {
                              "type": "string"
                            },
                            "filters": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "md5Authentication": {
                          "type": "boolean"
                        },
                        "MTU": {
                          "type": "integer"
                        },
                        "outboundRouteAdvertisement": {
                          "type": "object",
                          "properties": {
                            "defaultAction": {
                              "type": "string"
                            },
                            "filters": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "passive": {
                          "type": "boolean"
                        }
                      }
                    },
                    "override": {
                      "type": "boolean"
                    },
                    "subinterfaceId": {
                      "type": "integer"
                    },
                    "subinterfaceType": {
                      "type": "string"
                    },
                    "vlanId": {
                      "type": "integer",
                      "description": "static only"
                    },
                    "trusted": {
                      "type": "boolean"
                    },
                    "rpf": {
                      "type": "string",
                      "enum": [
                        "SPECIFIC",
                        "LOOSE",
                        "DISABLED"
                      ]
                    }
                  }
                }
              },
              "vlanId": {
                "type": "integer",
                "description": "static only"
              },
              "wanOverlay": {
                "type": "string",
                "enum": [
                  "DISABLED",
                  "AUTO_DISCOVERED",
                  "USER_DEFINED"
                ]
              },
              "trusted": {
                "type": "boolean"
              },
              "rpf": {
                "type": "string",
                "enum": [
                  "SPECIFIC",
                  "LOOSE",
                  "DISABLED"
                ]
              },
              "underlayAccounting": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "routes": {
          "type": "object",
          "properties": {
            "icmpProbes": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "icmpResponders": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "static": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "destination": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "sourceIp": {
                    "type": "string"
                  },
                  "gateway": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "preferred": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "string"
                  },
                  "wanInterface": {
                    "type": "string"
                  },
                  "icmpProbeLogicalId": {
                    "type": "string"
                  },
                  "vlanId": {
                    "type": "integer"
                  },
                  "advertise": {
                    "type": "boolean"
                  },
                  "subinterfaceId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "ha": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "interface": {
              "type": "string"
            }
          }
        },
        "dns": {
          "type": "object",
          "properties": {
            "primaryProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "backupProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "privateProviders": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            }
          }
        },
        "netflow": {
          "type": "object",
          "properties": {
            "enable": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "version": {
              "type": "integer"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "vqm": {
          "type": "object",
          "properties": {
            "enable": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "protocol": {
              "type": "string"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "vrrp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cidrIp": {
                    "type": "string"
                  },
                  "interface": {
                    "type": "string"
                  },
                  "interval": {
                    "type": "integer"
                  },
                  "preempt": {
                    "type": "boolean"
                  },
                  "preemptDelay": {
                    "type": "integer"
                  },
                  "priority": {
                    "type": "integer"
                  },
                  "subinterfaceId": {
                    "type": "integer"
                  },
                  "vlanId": {
                    "type": "integer"
                  },
                  "vrid": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "snmp": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer"
            },
            "snmpv2c": {
              "type": "object",
              "properties": {
                "enable": {
                  "type": "boolean"
                },
                "enabled": {
                  "type": "boolean"
                },
                "community": {
                  "type": "string"
                },
                "allowedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "snmpv3": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "enable": {
                  "type": "boolean"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "passphrase": {
                        "type": "string"
                      },
                      "authAlg": {
                        "type": "string"
                      },
                      "privacy": {
                        "type": "boolean"
                      },
                      "encrAlg": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "multiSourceQos": {
          "type": "object",
          "properties": {
            "enable": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "highRatio": {
              "type": "integer"
            },
            "normalRatio": {
              "type": "integer"
            },
            "lowRatio": {
              "type": "integer"
            },
            "maxCapThreshold": {
              "type": "integer"
            },
            "minCapThreshold": {
              "type": "integer"
            }
          }
        },
        "tacacs": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string"
            },
            "sourceInterface": {
              "type": "string"
            }
          }
        }
      }
    },
    "edgeDeviceSettingsDataDhcpServer": {
      "type": "object",
      "properties": {
        "baseDhcpAddr": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "leaseTimeSeconds": {
          "type": "integer"
        },
        "dhcpRelay": {
          "type": "object",
          "properties": {
            "servers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "numDhcpAddr": {
          "type": "integer"
        },
        "staticReserved": {
          "type": "integer"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "option": {
                "type": "integer"
              },
              "value": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "metaData": {
                "type": "object",
                "properties": {
                  "dataType": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "display": {
                    "type": "boolean"
                  },
                  "list": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "option": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deviceSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/deviceSettingsData"
            },
            "refs": {
              "$ref": "#/definitions/deviceSettingsRefs"
            }
          },
          "required": [
            "name",
            "data"
          ]
        }
      ]
    },
    "segmentBasedDeviceSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/segmentBasedDeviceSettingsData"
            },
            "refs": {
              "$ref": "#/definitions/deviceSettingsRefs"
            }
          },
          "required": [
            "name",
            "data"
          ]
        }
      ]
    },
    "deviceSettingsRefs": {
      "type": "object",
      "properties": {
        "deviceSettings:segment": {
          "type": "object"
        },
        "deviceSettings:dns:primaryProvider": {
          "type": "object"
        },
        "deviceSettings:dns:backupProvider": {
          "type": "object"
        },
        "deviceSettings:dns:privateProviders": {
          "type": "object"
        },
        "deviceSettings:lan:allocation": {
          "type": "object"
        },
        "deviceSettings:tacacs": {
          "type": "object"
        }
      }
    },
    "deviceSettingsRefs_tacacs": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "moduleId": {
          "type": "integer"
        },
        "configurationId": {
          "type": "integer"
        },
        "ref": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "modified": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "deviceSettingsData": {
      "type": "object",
      "properties": {
        "lan": {
          "type": "object",
          "properties": {
            "allocation": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                },
                "assignableVlans": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "managementVlans": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "ospf": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "areas": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "bgp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "asn": {
              "type": "string"
            },
            "neighbors": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "dns": {
          "type": "object",
          "properties": {
            "primaryProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "backupProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "privateProviders": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            }
          }
        },
        "authentication": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string"
            }
          }
        },
        "softwareUpdate": {
          "type": "object",
          "properties": {
            "windowed": {
              "type": "boolean"
            },
            "window": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "integer"
                },
                "beginHour": {
                  "type": "integer"
                },
                "endHour": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "radioSettings": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "radios": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "radioId": {
                    "type": "integer"
                  },
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "band": {
                    "type": "string"
                  },
                  "channel": {
                    "type": "string"
                  },
                  "width": {
                    "type": "string"
                  },
                  "mode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "netflow": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "version": {
              "type": "integer"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "vqm": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "protocol": {
              "type": "string"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "snmp": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer"
            },
            "snmpv2c": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "community": {
                  "type": "string"
                },
                "allowedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "snmpv3": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "passphrase": {
                        "type": "string"
                      },
                      "authAlg": {
                        "type": "string"
                      },
                      "privacy": {
                        "type": "boolean"
                      },
                      "encrAlg": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "multiSourceQos": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "highRatio": {
              "type": "integer"
            },
            "normalRatio": {
              "type": "integer"
            },
            "lowRatio": {
              "type": "integer"
            },
            "maxCapThreshold": {
              "type": "integer"
            },
            "minCapThreshold": {
              "type": "integer"
            }
          }
        },
        "models": {
          "type": "object",
          "properties": {
            "virtual": {
              "type": "object",
              "properties": {
                "routedInterfaces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "disabled": {
                        "type": "boolean"
                      },
                      "addressing": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "cidrPrefix": {
                            "type": "integer"
                          },
                          "cidrIp": {
                            "type": "string"
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "gateway": {
                            "type": "string"
                          }
                        }
                      },
                      "wanOverlay": {
                        "type": "string"
                      },
                      "natDirect": {
                        "type": "boolean"
                      },
                      "ospf": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "area": {
                            "type": "integer"
                          },
                          "authentication": {
                            "type": "boolean"
                          },
                          "authId": {
                            "type": "integer"
                          },
                          "authPassphrase": {
                            "type": "string"
                          },
                          "helloTimer": {
                            "type": "integer"
                          },
                          "deadTimer": {
                            "type": "integer"
                          },
                          "md5Authentication": {
                            "type": "boolean"
                          },
                          "cost": {
                            "type": "integer"
                          },
                          "MTU": {
                            "type": "integer"
                          },
                          "passive": {
                            "type": "boolean"
                          },
                          "inboundRouteLearning": {
                            "type": "object",
                            "properties": {
                              "defaultAction": {
                                "type": "string"
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "outboundRouteAdvertisement": {
                            "type": "object",
                            "properties": {
                              "defaultAction": {
                                "type": "string"
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      },
                      "vlanId": {
                        "type": "integer"
                      },
                      "l2": {
                        "type": "object",
                        "properties": {
                          "autonegotiation": {
                            "type": "boolean"
                          },
                          "speed": {
                            "type": "string"
                          },
                          "duplex": {
                            "type": "string"
                          },
                          "MTU": {
                            "type": "integer"
                          }
                        }
                      },
                      "underlayAccounting": {
                        "type": "boolean",
                        "default": true
                      },
                      "trusted": {
                        "type": "boolean"
                      },
                      "rpf": {
                        "type": "string",
                        "enum": [
                          "SPECIFIC",
                          "LOOSE",
                          "DISABLED"
                        ]
                      }
                    }
                  }
                },
                "lan": {
                  "type": "object",
                  "properties": {
                    "interfaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "space": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "cwp": {
                            "type": "boolean"
                          },
                          "portMode": {
                            "type": "string"
                          },
                          "untaggedVlan": {
                            "type": "string"
                          },
                          "disabled": {
                            "type": "boolean"
                          },
                          "l2": {
                            "type": "object",
                            "properties": {
                              "autonegotiation": {
                                "type": "boolean"
                              },
                              "speed": {
                                "type": "string"
                              },
                              "duplex": {
                                "type": "string"
                              },
                              "MTU": {
                                "type": "integer"
                              }
                            }
                          },
                          "vlanIds": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vpn": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "edgeToDataCenter": {
              "type": "boolean"
            },
            "ref": {
              "type": "string"
            },
            "edgeToEdgeHub": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "ref": {
                  "type": "string"
                }
              }
            },
            "edgeToEdge": {
              "type": "boolean"
            },
            "edgeToEdgeDetail": {
              "type": "object",
              "properties": {
                "useCloudGateway": {
                  "type": "boolean"
                },
                "encryptionProtocol": {
                  "type": "string"
                },
                "dynamic": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string"
                    },
                    "timeout": {
                      "type": "integer"
                    }
                  }
                },
                "vpnHubs": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "autoSelectVpnHubs": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "segmentBasedDeviceSettingsData": {
      "type": "object",
      "properties": {
        "ha": {
          "$ref": "#/definitions/device_settings_ha"
        },
        "lan": {
          "$ref": "#/definitions/device_settings_lan"
        },
        "models": {
          "type": "object",
          "properties": {
            "virtual": {
              "$ref": "#/definitions/device_settings_model"
            }
          }
        },
        "multiSourceQos": {
          "$ref": "#/definitions/device_settings_multi_source_qos"
        },
        "ntp": {
          "$ref": "#/definitions/device_settings_ntp"
        },
        "radioSettings": {
          "$ref": "#/definitions/device_settings_radio_settings"
        },
        "routedInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_routed_interface"
          }
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_segment"
          }
        },
        "snmp": {
          "$ref": "#/definitions/device_settings_snmp"
        },
        "softwareUpdate": {
          "$ref": "#/definitions/device_settings_software_update"
        },
        "tacacs": {
          "$ref": "#/definitions/device_settings_tacacs"
        }
      }
    },
    "device_settings_authentication": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "ref": {
          "type": "string",
          "enum": [
            "deviceSettings:authentication"
          ]
        }
      }
    },
    "device_settings_bgp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "ASN": {
          "type": "string"
        },
        "connectedRoutes": {
          "type": "boolean"
        },
        "defaultRoute": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "advertise": {
              "type": "string"
            }
          }
        },
        "disableASPathCarryOver": {
          "type": "boolean"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_filter"
          }
        },
        "holdtime": {
          "type": "string"
        },
        "isEdge": {
          "type": "boolean"
        },
        "keepalive": {
          "type": "string"
        },
        "neighbors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_neighbor"
          }
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_network"
          }
        },
        "ospf": {
          "$ref": "#/definitions/device_settings_bgp_ospf_redistribution"
        },
        "overlayPrefix": {
          "type": "boolean"
        },
        "propagateUplink": {
          "type": "boolean"
        },
        "routerId": {
          "type": "string"
        },
        "uplinkCommunity": {
          "type": "string"
        }
      }
    },
    "device_settings_bgp_filter": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_filter_rule"
          }
        }
      }
    },
    "device_settings_bgp_filter_rule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PERMIT",
                "DENY"
              ]
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "AS_PATH_PREPEND",
                      "METRIC",
                      "LOCAL_PREFERENCE",
                      "COMMUNITY"
                    ]
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "match": {
          "type": "object",
          "properties": {
            "exactMatch": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "COMMUNITY",
                "PREFIX"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "device_settings_bgp_neighbor": {
      "type": "object",
      "properties": {
        "neighborAS": {
          "type": "string"
        },
        "neighborIp": {
          "type": "string"
        },
        "neighborTag": {
          "type": "string",
          "enum": [
            "UPLINK"
          ]
        },
        "inboundFilter": {
          "$ref": "#/definitions/device_settings_bgp_filter_set"
        },
        "outboundFilter": {
          "$ref": "#/definitions/device_settings_bgp_filter_set"
        },
        "allowAS": {
          "type": "boolean"
        },
        "connect": {
          "type": "string"
        },
        "defaultRoute": {
          "type": "boolean"
        },
        "holdtime": {
          "type": "string"
        },
        "keepalive": {
          "type": "string"
        }
      }
    },
    "device_settings_bgp_filter_set": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "device_settings_bgp_network": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "segmentId": {
          "type": "string"
        }
      }
    },
    "device_settings_bgp_ospf_redistribution": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "integer"
        }
      }
    },
    "device_settings_cloud_security": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "config": {
          "type": "object",
          "properties": {
            "authenticationAlgorithm": {
              "type": "string"
            },
            "encryptionAlgorithm": {
              "type": "string"
            },
            "redirect": {
              "type": "string"
            },
            "IKEPROP": {
              "type": "object",
              "properties": {
                "protocolVersion": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "provider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:css:provider"
              ]
            }
          }
        }
      }
    },
    "device_settings_dns": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "primaryProvider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:dns:primaryProvider"
              ]
            }
          }
        },
        "backupProvider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:dns:backupProvider"
              ]
            }
          }
        },
        "privateProviders": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:dns:privateProviders"
              ]
            }
          }
        }
      }
    },
    "device_settings_ha": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "interface": {
          "type": "string"
        }
      }
    },
    "device_settings_handoff_gateways": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "autoSelect": {
          "type": "boolean"
        },
        "gatewayList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_handoff_gateway"
          }
        },
        "gateways": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/logicalid_reference"
          }
        }
      }
    },
    "device_settings_handoff_gateway": {
      "allOf": [
        {
          "$ref": "#/definitions/logicalid_reference"
        },
        {
          "properties": {
            "ipsecDetail": {
              "$ref": "#/definitions/device_settings_handoff_gateway_ipsec_detail"
            }
          }
        }
      ]
    },
    "device_settings_handoff_gateway_ipsec_detail": {
      "type": "object",
      "properties": {
        "ipsecGatewayAddress": {
          "type": "string"
        },
        "strictHostCheck": {
          "type": "boolean"
        }
      }
    },
    "device_settings_model": {
      "type": "object",
      "properties": {
        "lan": {
          "$ref": "#/definitions/device_settings_lan"
        },
        "routedInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_routed_interface"
          }
        }
      }
    },
    "device_settings_multicast": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "igmpHostQueryIntervalSeconds": {
          "type": "integer"
        },
        "igmpMaxQueryResponse": {
          "type": "integer"
        },
        "pimKeepAliveTimerSeconds": {
          "type": "integer"
        },
        "pimOnWanOverlay": {
          "enabled": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "SOURCE_IP"
            ]
          },
          "sourceCidrIp": {
            "type": "string"
          },
          "sourceInterface": {
            "type": "string"
          }
        },
        "pimPruneIntervalSeconds": {
          "type": "integer"
        },
        "rp": {
          "type": {
            "type": "string",
            "enum": [
              "STATIC"
            ]
          },
          "staticGroups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/device_settings_multicast_rp_static_group"
            }
          }
        }
      }
    },
    "device_settings_multicast_rp_static_group": {
      "type": "object",
      "properties": {
        "multicastGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rpAddress": {
          "type": "string"
        }
      }
    },
    "device_settings_netflow": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "collectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_netflow_collector"
          }
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "device_settings_netflow_collector": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      }
    },
    "device_settings_ospf": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "areas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_ospf_area"
          }
        },
        "bgp": {
          "$ref": "#/definitions/device_settings_ospf_bgp_redistribution"
        },
        "defaultPrefixes": {
          "type": "boolean"
        },
        "defaultRouteAdvertise": {
          "type": "string",
          "enum": [
            "ALWAYS",
            "CONDITIONAL"
          ]
        },
        "defaultRoutes": {
          "type": "string",
          "enum": [
            "OE1",
            "OE2",
            "NONE"
          ]
        }
      }
    },
    "device_settings_ospf_area": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "device_settings_ospf_bgp_redistribution": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "integer"
        },
        "metricType": {
          "type": "string",
          "enum": [
            "E1",
            "E2"
          ]
        }
      }
    },
    "device_settings_icmp_probe": {
      "type": "object"
    },
    "device_settings_icmp_responder": {
      "type": "object"
    },
    "device_settings_static_route": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "sourceIp": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "preferred": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "string"
        },
        "wanInterface": {
          "type": "string"
        },
        "icmpProbeLogicalId": {
          "type": "string"
        },
        "vlanId": {
          "type": "integer"
        },
        "advertise": {
          "type": "boolean"
        },
        "subinterfaceId": {
          "type": "integer"
        }
      }
    },
    "device_settings_segment_metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "segmentId": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "REGULAR",
            "CDE"
          ]
        }
      }
    },
    "device_settings_vpn": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "edgeToDataCenter": {
          "type": "boolean"
        },
        "ref": {
          "type": "string",
          "enum": [
            "deviceSettings:vpn:dataCenter"
          ]
        },
        "edgeToEdgeHub": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:vpn:edgeHub"
              ]
            }
          }
        },
        "edgeToEdge": {
          "type": "boolean"
        },
        "edgeToEdgeDetail": {
          "type": "object",
          "properties": {
            "autoSelectVpnHubs": {
              "type": "boolean"
            },
            "dynamic": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "isolation": {
                  "$ref": "#/definitions/device_settings_vpn_profile_isolation"
                },
                "type": {
                  "type": "string"
                },
                "timeout": {
                  "type": "integer"
                }
              }
            },
            "encryptionProtocol": {
              "type": "string"
            },
            "isolation": {
              "$ref": "#/definitions/device_settings_vpn_profile_isolation"
            },
            "isolationGroupId": {
              "type": "string"
            },
            "isolationGroups": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "useCloudGateway": {
              "type": "boolean"
            },
            "vpnHubs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_vpn_hub"
              }
            }
          }
        }
      }
    },
    "device_settings_vpn_profile_isolation": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "device_settings_vpn_hub": {
      "allOf": [
        {
          "$ref": "#/definitions/logicalid_reference"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "edgeHub",
                "edgeHubCluster"
              ]
            }
          }
        }
      ]
    },
    "device_settings_vqm": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "RFC6035"
          ]
        },
        "collectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_netflow_collector"
          }
        }
      }
    },
    "device_settings_vrrp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_vrrp_virtual_router"
          }
        }
      }
    },
    "device_settings_vrrp_virtual_router": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "interval": {
          "type": "integer"
        },
        "preempt": {
          "type": "boolean"
        },
        "preemptDelay": {
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "subinterfaceId": {
          "type": "integer"
        },
        "vlanId": {
          "type": "integer"
        },
        "vrid": {
          "type": "integer"
        }
      }
    },
    "device_settings_lan": {
      "type": "object",
      "properties": {
        "interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_lan_interface"
          }
        },
        "management": {
          "$ref": "#/definitions/subnet"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_lan_network"
          }
        },
        "visibility": {
          "type": "object",
          "properties": {
            "override": {
              "type": "boolean"
            },
            "mode": {
              "type": "string",
              "enum": [
                "MAC",
                "IP"
              ]
            }
          }
        }
      }
    },
    "device_settings_lan_interface": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "cwp": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "l2": {
          "type": "object",
          "properties": {
            "autonegotiation": {
              "type": "boolean"
            },
            "speed": {
              "type": "string"
            },
            "duplex": {
              "type": "string",
              "enum": [
                "FULL",
                "HALF"
              ]
            },
            "MTU": {
              "type": "integer"
            }
          }
        },
        "portMode": {
          "type": "string",
          "enum": [
            "access",
            "trunk"
          ]
        },
        "space": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "wired",
            "wireless"
          ]
        },
        "untaggedVlan": {
          "type": "integer"
        },
        "vlanIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "broadcastSsid": {
          "type": "boolean"
        },
        "passphrase": {
          "type": "string"
        },
        "ssid": {
          "type": "string"
        },
        "securityMode": {
          "type": "string",
          "enum": [
            "Open",
            "WPA2Enterprise",
            "WPA2Personal"
          ]
        }
      }
    },
    "device_settings_lan_network": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "advertise": {
          "type": "boolean"
        },
        "baseDhcpAddr": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "cost": {
          "type": "integer"
        },
        "dhcp": {
          "$ref": "#/definitions/device_settings_dhcp"
        },
        "disabled": {
          "type": "boolean"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multicast": {
          "type": "object",
          "properties": {
            "igmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "IGMP_V2"
                  ]
                }
              }
            },
            "igmpHostQueryIntervalSeconds": {
              "type": "integer"
            },
            "igmpMaxQueryResponse": {
              "type": "integer"
            },
            "pim": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PIM_SM"
                  ]
                }
              }
            },
            "pimKeepAliveTimerSeconds": {
              "type": "integer"
            },
            "pimPruneIntervalSeconds": {
              "type": "integer"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "numDhcpAddr": {
          "type": "integer"
        },
        "ospf": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "override": {
              "type": "boolean"
            },
            "area": {
              "type": "integer"
            },
            "passiveInterface": {
              "type": "boolean"
            }
          }
        },
        "segmentId": {
          "type": "integer"
        },
        "staticReserved": {
          "type": "integer"
        },
        "vlanId": {
          "type": "integer"
        }
      }
    },
    "device_settings_dhcp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "dhcpRelay": {
          "$ref": "#/definitions/device_settings_dhcp_relay"
        },
        "leaseTimeSeconds": {
          "type": "integer"
        },
        "baseDhcpAddr": {
          "type": "integer"
        },
        "numDhcpAddr": {
          "type": "integer"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_dhcp_option"
          }
        },
        "override": {
          "type": "boolean"
        }
      }
    },
    "device_settings_dhcp_relay": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "device_settings_dhcp_option": {
      "type": "object",
      "properties": {
        "option": {
          "type": "integer"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "metaData": {
          "type": "object",
          "properties": {
            "dataType": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "display": {
              "type": "boolean"
            },
            "list": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "option": {
              "type": "integer"
            }
          }
        }
      }
    },
    "device_settings_multi_source_qos": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "highRatio": {
          "type": "integer"
        },
        "normalRatio": {
          "type": "integer"
        },
        "lowRatio": {
          "type": "integer"
        },
        "maxCapThreshold": {
          "type": "integer"
        },
        "minCapThreshold": {
          "type": "integer"
        }
      }
    },
    "device_settings_ntp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_ntp_server"
          }
        }
      }
    },
    "device_settings_ntp_server": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string"
        }
      }
    },
    "device_settings_radio_settings": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "radios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_radio"
          }
        }
      }
    },
    "device_settings_radio": {
      "type": "object",
      "properties": {
        "band": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "mode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "radioId": {
          "type": "integer"
        },
        "width": {
          "type": "string"
        }
      }
    },
    "device_settings_routed_interface": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "addressing": {
          "$ref": "#/definitions/device_settings_routed_interface_addressing"
        },
        "advertise": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "dhcpServer": {
          "$ref": "#/definitions/device_settings_dhcp"
        },
        "encryptOverlay": {
          "type": "boolean"
        },
        "l2": {
          "$ref": "#/definitions/device_settings_routed_interface_l2"
        },
        "multicast": {
          "type": "object",
          "properties": {
            "igmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "IGMP_V2"
                  ]
                }
              }
            },
            "igmpHostQueryIntervalSeconds": {
              "type": "integer"
            },
            "igmpMaxQueryResponse": {
              "type": "integer"
            },
            "pim": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PIM_SM"
                  ]
                }
              }
            },
            "pimKeepAliveTimerSeconds": {
              "type": "integer"
            },
            "pimPruneIntervalSeconds": {
              "type": "integer"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "natDirect": {
          "type": "boolean"
        },
        "ospf": {
          "$ref": "#/definitions/device_settings_routed_interface_ospf"
        },
        "radiusAuthentication": {
          "enabled": {
            "type": "boolean"
          },
          "macBypass": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        },
        "segmentId": {
          "type": "integer"
        },
        "subinterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_subinterface"
          }
        },
        "rpf": {
          "type": "string",
          "enum": [
            "SPECIFIC",
            "LOOSE",
            "DISABLED"
          ]
        },
        "trusted": {
          "type": "boolean"
        },
        "underlayAccounting": {
          "type": "boolean",
          "default": true
        },
        "vlanId": {
          "type": "integer"
        },
        "wanOverlay": {
          "type": "string",
          "enum": [
            "DISABLED",
            "AUTO_DISCOVERED",
            "USER_DEFINED"
          ]
        }
      }
    },
    "device_settings_routed_interface_addressing": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DHCP",
            "STATIC",
            "PPPOE"
          ]
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "device_settings_routed_interface_ospf": {
      "type": "object",
      "properties": {
        "area": {
          "type": "integer"
        },
        "authentication": {
          "type": "boolean"
        },
        "authId": {
          "type": "integer"
        },
        "authPassphrase": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "deadTimer": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "helloTimer": {
          "type": "integer"
        },
        "inboundRouteLearning": {
          "$ref": "#/definitions/device_settings_routed_interface_ospf_filter"
        },
        "md5Authentication": {
          "type": "boolean"
        },
        "MTU": {
          "type": "integer"
        },
        "outboundRouteAdvertisement": {
          "$ref": "#/definitions/device_settings_routed_interface_ospf_filter"
        },
        "passive": {
          "type": "boolean"
        },
        "vlanId": {
          "type": "integer"
        }
      }
    },
    "device_settings_routed_interface_ospf_filter": {
      "type": "object",
      "properties": {
        "defaultAction": {
          "type": "string",
          "enum": [
            "ADVERTISE",
            "IGNORE",
            "LEARN"
          ]
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "string"
              },
              "action": {
                "type": "string",
                "enum": [
                  "ADVERTISE",
                  "IGNORE",
                  "LEARN"
                ]
              }
            }
          }
        }
      }
    },
    "device_settings_routed_interface_l2": {
      "type": "object",
      "properties": {
        "autonegotiation": {
          "type": "boolean"
        },
        "speed": {
          "type": "string"
        },
        "duplex": {
          "type": "string",
          "enum": [
            "FULL",
            "HALF"
          ]
        },
        "MTU": {
          "type": "integer"
        }
      }
    },
    "device_settings_subinterface": {
      "allOf": [
        {
          "$ref": "#/definitions/device_settings_routed_interface"
        },
        {
          "type": "object",
          "properties": {
            "subinterfaceId": {
              "type": "integer"
            },
            "subinterfaceType": {
              "type": "string",
              "enum": [
                "SECONDARY_IP",
                "SUB_INTERFACE"
              ]
            }
          }
        }
      ]
    },
    "device_settings_segment": {
      "type": "object",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/device_settings_authentication"
        },
        "bgp": {
          "$ref": "#/definitions/device_settings_bgp"
        },
        "css": {
          "$ref": "#/definitions/device_settings_cloud_security"
        },
        "dns": {
          "$ref": "#/definitions/device_settings_dns"
        },
        "handOffControllers": {
          "$ref": "#/definitions/device_settings_handoff_gateways"
        },
        "handOffGateways": {
          "$ref": "#/definitions/device_settings_handoff_gateways"
        },
        "multicast": {
          "$ref": "#/definitions/device_settings_multicast"
        },
        "netflow": {
          "$ref": "#/definitions/device_settings_netflow"
        },
        "ospf": {
          "$ref": "#/definitions/device_settings_ospf"
        },
        "routes": {
          "type": "object",
          "properties": {
            "icmpProbes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_icmp_probe"
              }
            },
            "icmpResponders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_icmp_responder"
              }
            },
            "static": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_static_route"
              }
            }
          }
        },
        "segment": {
          "$ref": "#/definitions/device_settings_segment_metadata"
        },
        "vpn": {
          "$ref": "#/definitions/device_settings_vpn"
        },
        "vqm": {
          "$ref": "#/definitions/device_settings_vqm"
        },
        "vrrp": {
          "$ref": "#/definitions/device_settings_vrrp"
        }
      }
    },
    "device_settings_snmp": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "port": {
          "type": "integer"
        },
        "snmpv2c": {
          "$ref": "#/definitions/device_settings_snmpv2c"
        },
        "snmpv3": {
          "$ref": "#/definitions/device_settings_snmpv3"
        }
      }
    },
    "device_settings_snmpv2c": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "community": {
          "type": "string"
        },
        "allowedIp": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "device_settings_snmpv3": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_snmpv3_user"
          }
        }
      }
    },
    "device_settings_snmpv3_user": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        },
        "authAlg": {
          "type": "string"
        },
        "privacy": {
          "type": "boolean"
        },
        "encrAlg": {
          "type": "string"
        }
      }
    },
    "device_settings_software_update": {
      "type": "object",
      "properties": {
        "windowed": {
          "type": "boolean"
        },
        "window": {
          "$ref": "#/definitions/device_settings_software_update_window"
        }
      }
    },
    "device_settings_software_update_window": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer"
        },
        "beginHour": {
          "type": "integer"
        },
        "endHour": {
          "type": "integer"
        }
      }
    },
    "device_settings_tacacs": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "enum": [
            "deviceSettings:tacacs"
          ]
        },
        "sourceInterface": {
          "type": "string"
        }
      }
    },
    "WAN": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/WAN_data"
            },
            "refs": {
              "$ref": "#/definitions/genericRefs"
            }
          }
        }
      ]
    },
    "WAN_data": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "logicalId": {
                "type": "string"
              },
              "internalId": {
                "type": "string"
              },
              "discovery": {
                "type": "string",
                "enum": [
                  "DISABLED",
                  "AUTO_DISCOVERED",
                  "USER_DEFINED"
                ]
              },
              "mode": {
                "type": "string",
                "enum": [
                  "PUBLIC",
                  "PRIVATE"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "WIRED",
                  "WIRELESS"
                ]
              },
              "name": {
                "type": "string"
              },
              "isp": {
                "type": "string"
              },
              "publicIpAddress": {
                "type": "string"
              },
              "sourceIpAddress": {
                "type": "string"
              },
              "nextHopIpAddress": {
                "type": "string"
              },
              "customVlanId": {
                "type": "boolean"
              },
              "vlanId": {
                "type": "integer"
              },
              "virtualIpAddress": {
                "type": "string"
              },
              "dynamicBwAdjustmentEnabled": {
                "type": "boolean"
              },
              "bwMeasurement": {
                "type": "string"
              },
              "upstreamMbps": {
                "type": "string"
              },
              "downstreamMbps": {
                "type": "string"
              },
              "backupOnly": {
                "type": "boolean"
              },
              "overheadBytes": {
                "type": "integer"
              },
              "udpHolePunching": {
                "type": "boolean"
              },
              "MTU": {
                "type": "integer"
              },
              "mplsNetwork": {
                "type": "string"
              },
              "dscpTag": {
                "type": "string"
              },
              "staticSlaEnabled": {
                "type": "boolean"
              },
              "classesofServiceEnabled": {
                "type": "boolean"
              },
              "encryptOverlay": {
                "type": "boolean"
              },
              "staticSLA": {
                "type": "object",
                "properties": {
                  "latencyMs": {
                    "type": "integer"
                  },
                  "jitterMs": {
                    "type": "integer"
                  },
                  "lossPct": {
                    "type": "integer"
                  }
                }
              },
              "classesOfService": {
                "type": "object",
                "properties": {
                  "classId": {
                    "type": "integer"
                  },
                  "classesOfService": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "dscpTags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "staticSLA": {
                          "type": "object",
                          "properties": {
                            "latencyMs": {
                              "type": "integer"
                            },
                            "jitterMs": {
                              "type": "integer"
                            },
                            "lossPct": {
                              "type": "string"
                            }
                          }
                        },
                        "bandwidthPct": {
                          "type": "integer"
                        },
                        "bandwidthGuaranteed": {
                          "type": "boolean"
                        },
                        "defaultClassOfService": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "interfaces": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lastActive": {
                "type": "string"
              }
            }
          }
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "logicalId": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "internalId": {
                "type": "string"
              },
              "ipAddress": {
                "type": "string"
              },
              "isp": {
                "type": "string"
              },
              "lastActive": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "metaData": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/metadata_data"
            }
          },
          "required": [
            "name",
            "data"
          ]
        }
      ]
    },
    "metadata_data": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "object",
          "properties": {
            "logicalId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      }
    },
    "application": {
      "properties": {
        "class": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "knownIpPortMapping": {
          "$ref": "#/definitions/ip_port_mapping"
        },
        "protocolPortMapping": {
          "$ref": "#/definitions/protocol_port_mapping"
        }
      },
      "required": [
        "id",
        "displayName",
        "class",
        "description",
        "knownIpPortMapping",
        "protocolPortMapping"
      ],
      "type": "object"
    },
    "application_metadata": {
      "properties": {
        "blobId": {
          "type": "integer"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "manifest": {
          "$ref": "#/definitions/application_metadata_manifest"
        },
        "modified": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkId": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "uploadDetails": {
          "$ref": "#/definitions/application_metadata_upload_details"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "networkId",
        "created",
        "name",
        "logicalId",
        "type",
        "description",
        "version",
        "manifest",
        "blobId",
        "modified",
        "fileName",
        "uploadDetails"
      ],
      "type": "object"
    },
    "application_metadata_manifest": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "version"
      ],
      "type": "object"
    },
    "application_metadata_upload_details": {
      "additionalProperties": true,
      "properties": {
        "size": {
          "type": "integer"
        }
      },
      "required": [
        "size"
      ],
      "type": "object"
    },
    "auth_object": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password2": {
          "format": "password",
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ],
      "type": "object"
    },
    "basic_metric": {
      "enum": [
        "packetsRx",
        "packetsTx",
        "totalPackets",
        "bytesRx",
        "bytesTx",
        "totalBytes"
      ],
      "type": "string"
    },
    "basic_metrics": {
      "items": {
        "$ref": "#/definitions/basic_metric"
      },
      "type": "array"
    },
    "edge_link_metric": {
      "type": "string",
      "enum": [
        "bytesRx",
        "bytesTx",
        "totalBytes",
        "p1BytesRx",
        "p1BytesTx",
        "p1PacketsRx",
        "p1PacketsTx",
        "p2BytesRx",
        "p2BytesTx",
        "p2PacketsRx",
        "p2PacketsTx",
        "p3BytesRx",
        "p3BytesTx",
        "p3PacketsRx",
        "p3PacketsTx",
        "controlBytesRx",
        "controlBytesTx",
        "controlPacketsRx",
        "controlPacketsTx",
        "bestBwKbpsRx",
        "bestBwKbpsTx",
        "bestJitterMsRx",
        "bestJitterMsTx",
        "bestLatencyMsRx",
        "bestLatencyMsTx",
        "bestLossPctRx",
        "bestLossPctTx",
        "bpsOfBestPathRx",
        "bpsOfBestPathTx",
        "signalStrength",
        "scoreTx",
        "scoreRx"
      ]
    },
    "model_configuration": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "edgeCount": {
          "type": "integer"
        },
        "effective": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "modified": {
          "type": "string"
        },
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configuration_module"
          }
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "empty_object": {
      "type": "object",
      "properties": {}
    },
    "bgp_peer_status": {
      "type": "object",
      "properties": {
        "neighborIp": {
          "type": "string"
        },
        "neighborAS": {
          "type": "integer"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bgp_peer_status_record"
          }
        }
      }
    },
    "bgp_peer_status_record": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "enum": [
            "IDLE",
            "CONNECT",
            "ACTIVE",
            "OPENSENT",
            "OPENCONFIRM",
            "ESTABLISHED",
            "CLEARING",
            "IDLEADMIN",
            "IDLEPRFXCT"
          ]
        },
        "msgRcvd": {
          "type": "integer"
        },
        "pfxRcvd": {
          "type": "integer"
        },
        "msgSent": {
          "type": "integer"
        },
        "upDownTime": {
          "type": "integer"
        }
      }
    },
    "config_edge_bgp_filter_set": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "config_edge_bgp_neighbor": {
      "type": "object",
      "properties": {
        "neighborAS": {
          "type": "string"
        },
        "neighborIp": {
          "type": "string"
        },
        "neighborTag": {
          "type": "string",
          "enum": [
            "UPLINK"
          ]
        },
        "inboundFilter": {
          "$ref": "#/definitions/config_edge_bgp_filter_set"
        },
        "outboundFilter": {
          "$ref": "#/definitions/config_edge_bgp_filter_set"
        },
        "allowAS": {
          "type": "boolean"
        },
        "connect": {
          "type": "string"
        },
        "defaultRoute": {
          "type": "boolean"
        },
        "holdtime": {
          "type": "string"
        },
        "keepalive": {
          "type": "string"
        }
      }
    },
    "configuration_clone_configuration_result": {
      "properties": {
        "id": {
          "description": "The ID of the newly cloned configuration",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "configuration_clone_and_convert_configuration_result": {
      "properties": {
        "id": {
          "description": "The ID of the newly cloned configuration",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "configuration_clone_enterprise_template_result": {
      "properties": {
        "id": {
          "description": "The ID of the newly cloned configuration",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "configuration_delete_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "configuration_get_configuration_modules_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "required": [
            "id",
            "name",
            "type",
            "data",
            "refs",
            "description",
            "configurationId"
          ]
        }
      ]
    },
    "configuration_get_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "effective",
            "modified"
          ]
        }
      ]
    },
    "configuration_get_routable_applications_result": {
      "properties": {
        "applicationClassToApplication": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_many"
            }
          ],
          "description": "Maps application class IDs (strings) to application IDs (integers)"
        },
        "applicationToApplicationClass": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_many"
            }
          ],
          "description": "Maps application IDs (strings) to class IDs (integers)"
        },
        "applications": {
          "items": {
            "$ref": "#/definitions/application"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/application_metadata"
        }
      },
      "required": [
        "applications",
        "applicationClassToApplication",
        "applicationToApplicationClass",
        "metaData"
      ],
      "type": "object"
    },
    "configuration_insert_configuration_module_result": {
      "properties": {
        "id": {
          "description": "The ID of the newly created configuration module",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "configuration_options_list": {
      "items": {
        "enum": [
          "modules",
          "edgeCount",
          "enterprises",
          "enterpriseCount",
          "counts"
        ],
        "type": "string"
      },
      "type": "array"
    },
    "configuration_update_configuration_module_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "base_enterprise_user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "userType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "isNative": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "destinations": {
      "properties": {
        "ip_addr": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "disaster_recovery_client_contact": {
      "properties": {
        "activeAddress": {
          "type": "string"
        },
        "activeLastResponseTime": {
          "format": "date-time",
          "type": "string"
        },
        "clientLogicalId": {
          "type": "string"
        },
        "clientType": {
          "enum": [
            "EDGE",
            "GATEWAY"
          ],
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "modified": {
          "format": "date-time",
          "type": "string"
        },
        "standbyAddress": {
          "type": "string"
        },
        "standbyLastResponseTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id",
        "clientType",
        "clientLogicalId",
        "activeAddress",
        "activeLastResponseTime",
        "standbyAddress",
        "standbyLastResponseTime",
        "modified"
      ],
      "type": "object"
    },
    "disaster_recovery_configure_active_for_replication_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_demote_active_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_get_replication_blob": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "disaster_recovery_get_replication_blob_result": {
      "properties": {
        "activeAccessFromStandby": {
          "type": "string"
        }
      },
      "required": [
        "activeAccessFromStandby"
      ],
      "type": "object"
    },
    "disaster_recovery_get_replication_status_result": {
      "properties": {
        "activeAddress": {
          "type": "string"
        },
        "activeReplicationAddress": {
          "type": "string"
        },
        "clientContact": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/disaster_recovery_client_contact"
          }
        },
        "clientCount": {
          "type": "object",
          "properties": {
            "edgeCount": {
              "type": "integer"
            },
            "gatewayCount": {
              "type": "integer"
            },
            "currentActiveEdgeCount": {
              "type": "integer"
            },
            "currentStandbyEdgeCount": {
              "type": "integer"
            },
            "currentActiveGatewayCount": {
              "type": "integer"
            },
            "currentStandbyGatewayCount": {
              "type": "integer"
            }
          }
        },
        "drState": {
          "enum": [
            "UNCONFIGURED",
            "ACTIVE_CONFIGURING",
            "ACTIVE_CONFIGURED",
            "LAUNCHING_STANDBY",
            "LAUNCHED_STANDBY",
            "ACTIVE_WAIT_STANDBY",
            "PENDING_STANDBY_CANDIDATE",
            "STANDBY_CANDIDATE",
            "STANDBY_CONFIG_RQST",
            "STANDBY_CONFIGURING",
            "STANDBY_CONFIGURED",
            "PENDING_STANDBY_UNCONFIG",
            "STANDBY_UNCONFIG",
            "PENDING_STANDBY_PROMOTION",
            "STANDBY_PROMOTED",
            "PENDING_ACTIVE_DEMOTION",
            "COPYING_DB",
            "COPY_DB_DONE",
            "COPYING_FILES",
            "COPY_FILES_DONE",
            "SYNC_CONFIGURING",
            "STANDBY_SYNC",
            "STANDBY_BACKGROUND_IMPORT",
            "STANDBY_RUNNING",
            "UPGRADING",
            "FAILURE_ACTIVE_CONFIGURING",
            "FAILURE_LAUNCHING_STANDBY",
            "FAILURE_STANDBY_CONFIGURING",
            "FAILURE_GET_STANDBY_CONFIG",
            "FAILURE_COPYING_DB",
            "FAILURE_COPYING_FILES",
            "FAILURE_SYNC_CONFIGURING",
            "FAILURE_BACKGROUND_IMPORT",
            "FAILURE_SYNCING_FILES",
            "FAILURE_GET_STANDBY_STATUS",
            "FAILURE_GET_ACTIVE_STATUS",
            "FAILURE_MYSQL_ACTIVE_STATUS",
            "FAILURE_MYSQL_STANDBY_STATUS",
            "FAILURE_STANDBY_CANDIDATE",
            "FAILURE_STANDBY_UNCONFIG",
            "FAILURE_STANDBY_PROMOTION",
            "FAILURE_ACTIVE_DEMOTION"
          ],
          "type": "string"
        },
        "drVCOUser": {
          "type": "string"
        },
        "failureDescription": {
          "type": "string"
        },
        "lastDrProtectedTime": {
          "type": "string",
          "format": "date-time"
        },
        "role": {
          "enum": [
            "STANDALONE",
            "ACTIVE",
            "STANDBY",
            "ZOMBIE"
          ],
          "type": "string"
        },
        "roleTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "standbyList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "standbyAddress": {
                "type": "string"
              },
              "standbyReplicationAddress": {
                "type": "string"
              },
              "standbyUuid": {
                "type": "string"
              }
            }
          }
        },
        "stateHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "enum": [
                  "UNCONFIGURED",
                  "ACTIVE_CONFIGURING",
                  "ACTIVE_CONFIGURED",
                  "LAUNCHING_STANDBY",
                  "LAUNCHED_STANDBY",
                  "ACTIVE_WAIT_STANDBY",
                  "PENDING_STANDBY_CANDIDATE",
                  "STANDBY_CANDIDATE",
                  "STANDBY_CONFIG_RQST",
                  "STANDBY_CONFIGURING",
                  "STANDBY_CONFIGURED",
                  "PENDING_STANDBY_UNCONFIG",
                  "STANDBY_UNCONFIG",
                  "PENDING_STANDBY_PROMOTION",
                  "STANDBY_PROMOTED",
                  "PENDING_ACTIVE_DEMOTION",
                  "COPYING_DB",
                  "COPY_DB_DONE",
                  "COPYING_FILES",
                  "COPY_FILES_DONE",
                  "SYNC_CONFIGURING",
                  "STANDBY_SYNC",
                  "STANDBY_BACKGROUND_IMPORT",
                  "STANDBY_RUNNING",
                  "UPGRADING",
                  "FAILURE_ACTIVE_CONFIGURING",
                  "FAILURE_LAUNCHING_STANDBY",
                  "FAILURE_STANDBY_CONFIGURING",
                  "FAILURE_GET_STANDBY_CONFIG",
                  "FAILURE_COPYING_DB",
                  "FAILURE_COPYING_FILES",
                  "FAILURE_SYNC_CONFIGURING",
                  "FAILURE_BACKGROUND_IMPORT",
                  "FAILURE_SYNCING_FILES",
                  "FAILURE_GET_STANDBY_STATUS",
                  "FAILURE_GET_ACTIVE_STATUS",
                  "FAILURE_MYSQL_ACTIVE_STATUS",
                  "FAILURE_MYSQL_STANDBY_STATUS",
                  "FAILURE_STANDBY_CANDIDATE",
                  "FAILURE_STANDBY_UNCONFIG",
                  "FAILURE_STANDBY_PROMOTION",
                  "FAILURE_ACTIVE_DEMOTION"
                ]
              },
              "to": {
                "type": "string",
                "enum": [
                  "UNCONFIGURED",
                  "ACTIVE_CONFIGURING",
                  "ACTIVE_CONFIGURED",
                  "LAUNCHING_STANDBY",
                  "LAUNCHED_STANDBY",
                  "ACTIVE_WAIT_STANDBY",
                  "PENDING_STANDBY_CANDIDATE",
                  "STANDBY_CANDIDATE",
                  "STANDBY_CONFIG_RQST",
                  "STANDBY_CONFIGURING",
                  "STANDBY_CONFIGURED",
                  "PENDING_STANDBY_UNCONFIG",
                  "STANDBY_UNCONFIG",
                  "PENDING_STANDBY_PROMOTION",
                  "STANDBY_PROMOTED",
                  "PENDING_ACTIVE_DEMOTION",
                  "COPYING_DB",
                  "COPY_DB_DONE",
                  "COPYING_FILES",
                  "COPY_FILES_DONE",
                  "SYNC_CONFIGURING",
                  "STANDBY_SYNC",
                  "STANDBY_BACKGROUND_IMPORT",
                  "STANDBY_RUNNING",
                  "UPGRADING",
                  "FAILURE_ACTIVE_CONFIGURING",
                  "FAILURE_LAUNCHING_STANDBY",
                  "FAILURE_STANDBY_CONFIGURING",
                  "FAILURE_GET_STANDBY_CONFIG",
                  "FAILURE_COPYING_DB",
                  "FAILURE_COPYING_FILES",
                  "FAILURE_SYNC_CONFIGURING",
                  "FAILURE_BACKGROUND_IMPORT",
                  "FAILURE_SYNCING_FILES",
                  "FAILURE_GET_STANDBY_STATUS",
                  "FAILURE_GET_ACTIVE_STATUS",
                  "FAILURE_MYSQL_ACTIVE_STATUS",
                  "FAILURE_MYSQL_STANDBY_STATUS",
                  "FAILURE_STANDBY_CANDIDATE",
                  "FAILURE_STANDBY_UNCONFIG",
                  "FAILURE_STANDBY_PROMOTION",
                  "FAILURE_ACTIVE_DEMOTION"
                ]
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "stateTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "vcoIp": {
          "type": "string"
        },
        "vcoReplicationIp": {
          "type": "string"
        },
        "vcoUuid": {
          "type": "string"
        }
      },
      "required": [
        "drState",
        "failureDescription",
        "role",
        "roleTimestamp",
        "activeAddress",
        "standbyList",
        "drVCOUser",
        "vcoUuid",
        "vcoIp"
      ],
      "type": "object"
    },
    "disaster_recovery_prepare_for_standby": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "disaster_recovery_prepare_for_standby_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_promote_standby_to_active_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_remove_standby": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "disaster_recovery_remove_standby_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_transition_to_standby_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_delete_edge_bgp_neighbor_records_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "edge_delete_edge_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "edge_edge_cancel_reactivation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_edge_provision_result": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "activationKey": {
          "type": "string"
        },
        "generatedCertificate": {
          "type": "object",
          "properties": {
            "certificate": {
              "type": "string"
            },
            "ca-certificate": {
              "type": "string"
            },
            "privateKey": {
              "type": "string"
            },
            "privateKeyPassword": {
              "type": "string"
            },
            "csr": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "id",
        "activationKey"
      ]
    },
    "edge_edge_request_reactivation_result": {
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "activationKeyExpires": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "activationKey",
        "activationKeyExpires"
      ]
    },
    "edge_get_edge_configuration_stack_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "modified",
            "modules"
          ]
        }
      ]
    },
    "edge_get_edge_result": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "properties": {
            "configuration": {
              "$ref": "#/definitions/model_configuration"
            },
            "enterprise": {
              "$ref": "#/definitions/enterprise"
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "recentLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "site": {
              "$ref": "#/definitions/site"
            }
          },
          "required": [
            "id",
            "created",
            "edgeHardwareId",
            "enterpriseId",
            "siteId",
            "activationKey",
            "activationKeyExpires",
            "activationState",
            "activationTime",
            "softwareVersion",
            "buildNumber",
            "softwareUpdated",
            "selfMacAddress",
            "deviceId",
            "logicalId",
            "serialNumber",
            "modelNumber",
            "deviceFamily",
            "name",
            "dnsName",
            "description",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "edgeState",
            "edgeStateTime",
            "isLive",
            "systemUpSince",
            "serviceUpSince",
            "lastContact",
            "serviceState",
            "endpointPkiMode",
            "haState",
            "haPreviousState",
            "haLastContact",
            "haSerialNumber",
            "modified"
          ],
          "type": "object"
        }
      ]
    },
    "edge_object": {
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "activationKeyExpires": {
          "type": "string"
        },
        "activationState": {
          "enum": [
            "UNASSIGNED",
            "PENDING",
            "ACTIVATED",
            "REACTIVATION_PENDING"
          ],
          "type": "string"
        },
        "activationTime": {
          "type": "string"
        },
        "alertsEnabled": {
          "type": "integer"
        },
        "buildNumber": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "deviceFamily": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "dnsName": {
          "type": "string"
        },
        "edgeHardwareId": {
          "type": "string"
        },
        "edgeState": {
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ],
          "type": "string"
        },
        "edgeStateTime": {
          "type": "string"
        },
        "endpointPkiMode": {
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ],
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "haLastContact": {
          "type": "string"
        },
        "haPreviousState": {
          "enum": [
            "UNCONFIGURED",
            "PENDING_INIT",
            "PENDING_CONFIRMATION",
            "PENDING_CONFIRMED",
            "PENDING_DISSOCIATION",
            "READY",
            "FAILED"
          ],
          "type": "string"
        },
        "haSerialNumber": {
          "type": "string"
        },
        "haState": {
          "enum": [
            "UNCONFIGURED",
            "PENDING_INIT",
            "PENDING_CONFIRMATION",
            "PENDING_CONFIRMED",
            "PENDING_DISSOCIATION",
            "READY",
            "FAILED"
          ],
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "isLive": {
          "type": "integer"
        },
        "lastContact": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "modelNumber": {
          "type": "string"
        },
        "modified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operatorAlertsEnabled": {
          "type": "integer"
        },
        "selfMacAddress": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "serviceState": {
          "enum": [
            "IN_SERVICE",
            "OUT_OF_SERVICE",
            "PENDING_SERVICE"
          ],
          "type": "string"
        },
        "serviceUpSince": {
          "type": "string"
        },
        "siteId": {
          "type": "integer"
        },
        "softwareUpdated": {
          "type": "string"
        },
        "softwareVersion": {
          "type": "string"
        },
        "systemUpSince": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "edge_set_edge_hand_off_gateways_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_update_edge_admin_password_result": {
      "properties": {
        "id": {
          "description": "The ID of the action queued",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "set_client_device_host_name_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_update_edge_attributes_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_update_edge_credentials_by_configuration_result": {
      "properties": {
        "actionIds": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "required": [
        "actionIds"
      ],
      "type": "object"
    },
    "edge_set_edge_operator_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "edge_set_edge_enterprise_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_alert_notification_user_data": {
      "properties": {
        "email": {
          "type": "string"
        },
        "emailEnabled": {
          "type": "integer"
        },
        "enabled": {
          "type": "integer"
        },
        "enterpriseUserId": {
          "type": "integer"
        },
        "mobileEnabled": {
          "type": "integer"
        },
        "mobilePhone": {
          "type": "string"
        },
        "smsEnabled": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "emailEnabled",
        "enabled",
        "enterpriseUserId",
        "mobileEnabled",
        "mobilePhone",
        "smsEnabled",
        "username"
      ],
      "type": "object"
    },
    "enterprise_delete_enterprise_delete_enterprise_gateway_records_record": {
      "properties": {
        "gatewayId": {
          "type": "integer"
        },
        "neighborIp": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "enterprise_delete_enterprise_gateway_records_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_delete_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_delete_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_delete_enterprise_service_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_enterprise_proxy": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_proxy"
        },
        {
          "required": [
            "id",
            "created",
            "networkId",
            "proxyType",
            "operateGateways",
            "logicalId",
            "name",
            "domain",
            "prefix",
            "description",
            "contactName",
            "contactPhone",
            "contactMobile",
            "contactEmail",
            "streetAddress",
            "streetAddress2",
            "city",
            "state",
            "postalCode",
            "country",
            "lat",
            "lon",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_addresses_result_item": {
      "properties": {
        "address": {
          "type": "string"
        },
        "entity": {
          "enum": [
            "ACTIVE_VCO",
            "STANDBY_VCO",
            "GATEWAY",
            "DATACENTER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "enterprise_get_enterprise_alert_configurations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_alert_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "alertDefinitionId",
            "enterpriseId",
            "enabled",
            "name",
            "description",
            "type",
            "definition",
            "firstNotificationSeconds",
            "maxNotifications",
            "notificationIntervalSeconds",
            "resetIntervalSeconds",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_alerts_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_alert_trigger"
        },
        {
          "required": [
            "id",
            "created",
            "triggerTime",
            "enterpriseAlertConfigurationId",
            "enterpriseId",
            "edgeId",
            "edgeName",
            "linkId",
            "linkName",
            "enterpriseObjectId",
            "enterpriseObjectName",
            "name",
            "type",
            "state",
            "stateSetTime",
            "lastContact",
            "firstNotificationSeconds",
            "maxNotifications",
            "notificationIntervalSeconds",
            "resetIntervalSeconds",
            "comment",
            "nextNotificationTime",
            "remainingNotifications",
            "timezone",
            "locale",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_all_alert_recipients_result": {
      "properties": {
        "emailEnabled": {
          "type": "boolean"
        },
        "emailList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enterpriseUsers": {
          "items": {
            "$ref": "#/definitions/enterprise_alert_notification_user_data"
          },
          "type": "array"
        },
        "mobileEnabled": {
          "type": "boolean"
        },
        "mobileList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "smsEnabled": {
          "type": "boolean"
        },
        "smsList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "snmpEnabled": {
          "type": "boolean"
        },
        "snmpList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "emailEnabled",
        "emailList",
        "enterpriseUsers",
        "mobileEnabled",
        "mobileList",
        "smsEnabled",
        "smsList"
      ],
      "type": "object"
    },
    "enterprise_get_enterprise_capabilities_result": {
      "type": "object",
      "properties": {
        "edgeVnfs.enable": {
          "type": "boolean"
        },
        "edgeVnfs.securityVnf.paloAlto": {
          "type": "boolean"
        },
        "enableBGP": {
          "type": "boolean"
        },
        "enableCosMapping": {
          "type": "boolean"
        },
        "enableEnterpriseAuth": {
          "type": "boolean"
        },
        "enableFwLogs": {
          "type": "boolean"
        },
        "enableNetworks": {
          "type": "boolean"
        },
        "enableOSPF": {
          "type": "boolean"
        },
        "enablePKI": {
          "type": "boolean"
        },
        "enablePremium": {
          "type": "boolean"
        },
        "enableSegmentation": {
          "type": "boolean"
        },
        "enableServiceRateLimiting": {
          "type": "boolean"
        },
        "enableVQM": {
          "type": "boolean"
        }
      },
      "example": {
        "edgeVnfs.enable": true,
        "edgeVnfs.securityVnf.paloAlto": true,
        "enableBGP": false,
        "enableCosMapping": true,
        "enableEnterpriseAuth": true,
        "enableFwLogs": false,
        "enableNetworks": true,
        "enableOSPF": true,
        "enablePKI": true,
        "enablePremium": true,
        "enableSegmentation": true,
        "enableServiceRateLimiting": false,
        "enableVQM": true
      }
    },
    "enterprise_get_enterprise_configurations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "effective",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_edges_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "properties": {
            "configuration": {
              "type": "object",
              "properties": {
                "operator": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "modules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "isEdgeSpecific": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ENTERPRISE",
                              "OPERATOR",
                              "GATEWAY"
                            ]
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "enterprise": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "modules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "edgeSpecificData": {
                            "type": "object"
                          },
                          "isEdgeSpecific": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ENTERPRISE",
                              "OPERATOR",
                              "GATEWAY"
                            ]
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "recentLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "site": {
              "$ref": "#/definitions/site"
            }
          },
          "required": [
            "id",
            "created",
            "edgeHardwareId",
            "enterpriseId",
            "siteId",
            "activationKey",
            "activationKeyExpires",
            "activationState",
            "activationTime",
            "softwareVersion",
            "buildNumber",
            "softwareUpdated",
            "selfMacAddress",
            "deviceId",
            "logicalId",
            "serialNumber",
            "modelNumber",
            "deviceFamily",
            "name",
            "dnsName",
            "description",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "edgeState",
            "edgeStateTime",
            "isLive",
            "systemUpSince",
            "serviceUpSince",
            "lastContact",
            "serviceState",
            "endpointPkiMode",
            "haState",
            "haPreviousState",
            "haLastContact",
            "haSerialNumber",
            "modified"
          ],
          "type": "object"
        }
      ]
    },
    "enterprise_get_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        }
      ]
    },
    "enterprise_get_enterprise_network_allocations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        }
      ]
    },
    "enterprise_get_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "properties": {
            "enterpriseProxy": {
              "$ref": "#/definitions/enterprise_enterprise_proxy"
            }
          },
          "required": [
            "domain",
            "contactPhone",
            "locale",
            "alertsEnabled",
            "endpointPkiMode",
            "contactEmail",
            "prefix",
            "contactName",
            "timezone",
            "id",
            "gatewayPoolId",
            "networkId",
            "city",
            "lon",
            "state",
            "streetAddress",
            "postalCode",
            "streetAddress2",
            "description",
            "accountNumber",
            "contactMobile",
            "lat",
            "logicalId",
            "operatorAlertsEnabled",
            "name",
            "created",
            "country",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_route_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        }
      ]
    },
    "enterprise_get_enterprise_route_table_result": {
      "properties": {
        "profiles": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/model_configuration"
              },
              {
                "required": [
                  "id",
                  "description",
                  "name"
                ]
              }
            ],
            "type": "object"
          },
          "type": "array"
        },
        "subnets": {
          "items": {
            "$ref": "#/definitions/enterprise_route_collection"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "enterprise_get_enterprise_services_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        }
      ]
    },
    "enterprise_object": {
      "allOf": [
        {
          "$ref": "#/definitions/site"
        },
        {
          "type": "object",
          "properties": {
            "gatewayPoolId": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "networkId": {
              "type": "integer"
            },
            "returnData": {
              "type": "boolean"
            },
            "user": {
              "$ref": "#/definitions/auth_object"
            }
          }
        }
      ]
    },
    "enterprise_insert_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_enterprise_network_segment_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_enterprise": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object"
        },
        {
          "type": "object",
          "properties": {
            "configurationId": {
              "type": "integer"
            },
            "enableEnterpriseDelegationToOperator": {
              "type": "boolean"
            },
            "enableEnterpriseDelegationToProxy": {
              "type": "boolean"
            },
            "enableEnterpriseUserManagementDelegationToOperator": {
              "type": "boolean"
            }
          },
          "required": [
            "networkId",
            "configurationId",
            "name"
          ]
        }
      ]
    },
    "enterprise_insert_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_insert_enterprise_proxy_enterprise": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_insert_enterprise"
        },
        {
          "type": "object",
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "enterprise_proxy_insert_enterprise_proxy_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_insert_enterprise_result"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_enterprises_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "type": "object",
          "properties": {
            "edgeCount": {
              "type": "integer"
            },
            "edges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_object"
              }
            }
          }
        }
      ]
    },
    "proxy_edge_inventory_object": {
      "type": "object",
      "properties": {
        "enterpriseName": {
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeName": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "edgeState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "haSerialNumber": {
          "type": "string"
        },
        "activationState": {
          "type": "string",
          "enum": [
            "UNASSIGNED",
            "PENDING",
            "ACTIVATED",
            "REACTIVATION_PENDING"
          ]
        },
        "activationTime": {
          "type": "string",
          "format": "date-time"
        },
        "modelNumber": {
          "type": "string"
        },
        "softwareVersion": {
          "type": "string"
        },
        "softwareUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "enterpriseName",
        "enterpriseId",
        "edgeName",
        "edgeId",
        "created",
        "edgeState",
        "serialNumber",
        "haSerialNumber",
        "activationState",
        "activationTime",
        "modelNumber",
        "softwareVersion",
        "softwareUpdated",
        "lastContact"
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_edge_inventory_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/proxy_edge_inventory_object"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_operator_profiles_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "type": "object",
          "properties": {
            "edges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_object"
              }
            },
            "enterprises": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/configuration_enterprise"
              }
            }
          },
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "effective",
            "modified"
          ]
        }
      ]
    },
    "enterprise_insert_enterprise_service_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_alert_configurations_result": {
      "type": "object",
      "properties": {
        "enterpriseAlertConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_alert_configuration"
          }
        }
      }
    },
    "enterprise_insert_or_update_enterprise_capability_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_property": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isPassword": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "JSON",
            "DATE",
            "DATETIME"
          ]
        },
        "description": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_get_enterprise_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "enterpriseId",
            "value",
            "isPassword",
            "dataType",
            "description",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_gateway_handoff_result": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string"
            },
            "isPassword": {
              "type": "boolean"
            },
            "dataType": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "modified": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "enterpriseId",
            "value"
          ]
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_gateway_handoff": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff"
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_gateway_handoff_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_gateway_pools_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_pool"
        },
        {
          "properties": {
            "enterprises": {
              "items": {
                "$ref": "#/definitions/enterprise"
              },
              "type": "array"
            },
            "gateways": {
              "items": {
                "$ref": "#/definitions/gateway_pool_gateway"
              },
              "type": "array"
            }
          }
        }
      ]
    },
    "enterprise_route_collection": {
      "properties": {
        "eligableExits": {
          "items": {
            "$ref": "#/definitions/enterprise_route"
          },
          "type": "array"
        },
        "preferredExits": {
          "items": {
            "$ref": "#/definitions/enterprise_route"
          },
          "type": "array"
        },
        "subnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "enterprise_set_enterprise_all_alert_recipients_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_get_enterprise_all_alert_recipients_result"
        }
      ]
    },
    "enterprise_update_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_network_segment_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_route_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_route_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_route_collection"
        },
        {
          "required": [
            "subnet",
            "preferredExits",
            "eligableExits"
          ]
        }
      ]
    },
    "enterprise_update_enterprise_security_policy_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_service_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "event_get_enterprise_events_result": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/enterprise_event"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ],
      "type": "object"
    },
    "event_get_operator_events_result": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/operator_event"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ],
      "type": "object"
    },
    "flow_metric_summary": {
      "type": "object",
      "properties": {
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "flowCount": {
          "type": "integer"
        },
        "packetsRx": {
          "type": "integer",
          "format": "int64"
        },
        "packetsTx": {
          "type": "integer",
          "format": "int64"
        },
        "totalBytes": {
          "type": "integer",
          "format": "int64"
        },
        "totalPackets": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "time_series": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "max": {
          "type": "integer",
          "format": "int64"
        },
        "metric": {
          "$ref": "#/definitions/basic_metric"
        },
        "min": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "tickInterval": {
          "type": "integer"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "data",
        "metric",
        "max",
        "min",
        "startTime",
        "tickInterval",
        "total"
      ]
    },
    "time_series_metadata": {
      "type": "object",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/time_series"
          }
        }
      },
      "required": [
        "series"
      ]
    },
    "enterprise_user_with_role_info": {
      "allOf": [
        {
          "$ref": "#/definitions/base_enterprise_user"
        },
        {
          "properties": {
            "roleId": {
              "type": "integer"
            },
            "roleName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "enterprise_user_with_role_and_assocs": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_info"
        },
        {
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseProxyId": {
              "type": "integer"
            },
            "networkId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "base_operator_user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "operatorId": {
          "type": "integer"
        },
        "userType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "isNative": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "operator_user_with_role_info": {
      "allOf": [
        {
          "$ref": "#/definitions/base_operator_user"
        },
        {
          "properties": {
            "roleId": {
              "type": "integer"
            },
            "roleName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "gateway_delete_gateway_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "gateway_gateway_provision_result": {
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "activationKey",
        "logicalId"
      ],
      "type": "object"
    },
    "gateway_roles_object": {
      "items": {
        "properties": {
          "gatewayRole": {
            "enum": [
              "DATA_PLANE",
              "CONTROL_PLANE",
              "VPN_TUNNEL",
              "ON_PREMISE",
              "CDE"
            ],
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "gateway_update_gateway_attributes_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "gateway_get_gateway_edge_assignments_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "type": "object",
          "properties": {
            "enterpriseName": {
              "type": "string"
            },
            "enterpriseProxyId": {
              "type": "integer"
            },
            "enterpriseProxyName": {
              "type": "string"
            },
            "lat": {
              "type": "number"
            },
            "lon": {
              "type": "number"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            }
          }
        }
      ]
    },
    "id_map_one_to_many": {
      "additionalProperties": {
        "type": "integer"
      },
      "type": "object"
    },
    "interval": {
      "properties": {
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "start"
      ],
      "type": "object"
    },
    "ip_port_mapping": {
      "properties": {
        "subnets": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tcpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "udpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "link_quality_event_get_link_quality_events_result": {
      "type": "object",
      "properties": {
        "overallLinkQuality": {
          "$ref": "#/definitions/link_quality_object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/link_quality_object"
      }
    },
    "link_service_groups": {
      "items": {
        "enum": [
          "ALL",
          "PRIVATE_WIRED",
          "PUBLIC_WIRED",
          "PUBLIC_WIRELESS"
        ],
        "type": "string"
      },
      "type": "array"
    },
    "list_metadata": {
      "properties": {
        "limit": {
          "type": "integer"
        },
        "more": {
          "type": "boolean"
        }
      },
      "required": [
        "limit",
        "more"
      ],
      "type": "object"
    },
    "live_mode_data": {
      "properties": {
        "linkStats": {
          "$ref": "#/definitions/live_mode_data_link_stats"
        }
      },
      "required": [
        "linkStats"
      ],
      "type": "object"
    },
    "live_mode_data_link_stats": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/live_mode_data_link_stats_data"
          },
          "type": "array"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "timestamp",
        "data"
      ],
      "type": "object"
    },
    "live_mode_data_link_stats_data": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/live_mode_data_link_stats_data_data"
          },
          "type": "array"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "timestamp",
        "data"
      ],
      "type": "object"
    },
    "live_mode_data_link_stats_data_data": {
      "properties": {
        "backupOnly": {
          "type": "integer"
        },
        "bestJitterMsRx": {
          "type": "integer"
        },
        "bestJitterMsTx": {
          "type": "integer"
        },
        "bestLatencyMsRx": {
          "type": "integer"
        },
        "bestLatencyMsTx": {
          "type": "integer"
        },
        "bestLossPctRx": {
          "type": "number",
          "format": "float"
        },
        "bestLossPctTx": {
          "type": "number",
          "format": "float"
        },
        "bpsOfBestPathRx": {
          "type": "integer"
        },
        "bpsOfBestPathTx": {
          "type": "integer"
        },
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "destinations": {
          "items": {
            "$ref": "#/definitions/destinations"
          },
          "type": "array"
        },
        "icmpBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "icmpBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "icmpPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "icmpPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "interface": {
          "type": "string"
        },
        "internalId": {
          "type": "string"
        },
        "localIpAddress": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "mode": {
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ],
          "type": "string"
        },
        "mtu": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "otherBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "otherBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "otherPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "otherPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p1BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "publicIpAddress": {
          "type": "string"
        },
        "scoreRx": {
          "type": "number",
          "format": "float"
        },
        "scoreTx": {
          "type": "number",
          "format": "float"
        },
        "signalStrength": {
          "type": "number",
          "format": "float"
        },
        "state": {
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ],
          "type": "string"
        },
        "tcpBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "tcpBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "tcpPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "tcpPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "enum": [
            "WIRED",
            "WIRELESS"
          ],
          "type": "string"
        },
        "udpBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "udpBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "udpHolePunching": {
          "type": "integer"
        },
        "udpPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "udpPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "vlanId": {
          "type": "integer"
        },
        "vpnState": {
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DEAD",
            "STANDBY"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "live_mode_enter_live_mode_result": {
      "properties": {
        "actionId": {
          "description": "The ID of the action queued",
          "type": "integer"
        },
        "alreadyLive": {
          "type": "boolean"
        },
        "lastContact": {
          "type": "integer"
        },
        "refreshIntervalMs": {
          "type": "integer"
        },
        "token": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "live_mode_exit_live_mode_result": {
      "properties": {
        "id": {
          "description": "The ID of the action queued",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "live_mode_read_live_data_result": {
      "properties": {
        "data": {
          "$ref": "#/definitions/live_mode_data"
        },
        "status": {
          "$ref": "#/definitions/live_mode_status"
        },
        "timestamp": {
          "type": "integer"
        }
      },
      "required": [
        "timestamp",
        "data",
        "status"
      ],
      "type": "object"
    },
    "live_mode_status": {
      "properties": {
        "isActive": {
          "type": "boolean"
        },
        "lastContact": {
          "type": "integer"
        }
      },
      "required": [
        "isActive",
        "lastContact"
      ],
      "type": "object"
    },
    "metrics_get_edge_app_link_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "linkId": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            },
            "serviceGroups": {
              "$ref": "#/definitions/link_service_groups"
            }
          },
          "required": [
            "linkId",
            "name",
            "serviceGroups"
          ]
        }
      ]
    },
    "metrics_get_edge_app_link_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            },
            "serviceGroups": {
              "$ref": "#/definitions/link_service_groups"
            }
          },
          "required": [
            "name",
            "serviceGroups"
          ]
        }
      ]
    },
    "metrics_get_edge_app_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "application": {
              "type": "integer"
            },
            "category": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            },
            "linkId": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "application"
          ]
        }
      ]
    },
    "metrics_get_edge_app_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_category_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "category": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "category"
          ]
        }
      ]
    },
    "metrics_get_edge_category_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_segment_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "segment": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "segment"
          ]
        }
      ]
    },
    "metrics_get_edge_segment_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_dest_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "destDomain": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "destDomain",
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_dest_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_device_metrics_device_edge_info": {
      "properties": {
        "edgeId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "hostName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string"
        },
        "lastContact": {
          "format": "date-time",
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "metrics_get_edge_device_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "edgeInfo": {
              "$ref": "#/definitions/metrics_get_edge_device_metrics_device_edge_info"
            },
            "info": {
              "$ref": "#/definitions/client_device"
            },
            "name": {
              "type": "string"
            },
            "sourceMac": {
              "type": "string"
            }
          },
          "required": [
            "edgeInfo",
            "info",
            "name",
            "sourceMac"
          ]
        }
      ]
    },
    "metrics_get_edge_device_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_link_metrics_result_item": {
      "properties": {
        "bestJitterMsRx": {
          "type": "integer"
        },
        "bestJitterMsTx": {
          "type": "integer"
        },
        "bestLatencyMsRx": {
          "type": "integer"
        },
        "bestLatencyMsTx": {
          "type": "integer"
        },
        "bestLossPctRx": {
          "type": "number",
          "format": "float"
        },
        "bestLossPctTx": {
          "type": "number",
          "format": "float"
        },
        "bpsOfBestPathRx": {
          "type": "integer"
        },
        "bpsOfBestPathTx": {
          "type": "integer"
        },
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "link": {
          "$ref": "#/definitions/link"
        },
        "linkId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "p1BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "scoreRx": {
          "type": "number",
          "format": "float"
        },
        "scoreTx": {
          "type": "number",
          "format": "float"
        },
        "signalStrength": {
          "type": "number",
          "format": "float"
        },
        "state": {
          "type": "integer"
        }
      },
      "required": [
        "link",
        "linkId",
        "name"
      ],
      "type": "object"
    },
    "metrics_get_edge_link_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "edgeId": {
              "type": "integer"
            },
            "link": {
              "$ref": "#/definitions/link"
            },
            "linkId": {
              "type": "integer"
            }
          },
          "required": [
            "edgeId",
            "linkId",
            "link"
          ]
        }
      ]
    },
    "metrics_get_edge_os_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            },
            "os": {
              "type": "integer"
            }
          },
          "required": [
            "os",
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_os_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "monitoring_get_aggregate_edge_link_metrics_result_item": {
      "type": "object",
      "properties": {
        "bestJitterMsRx": {
          "type": "integer"
        },
        "bestJitterMsTx": {
          "type": "integer"
        },
        "bestLatencyMsRx": {
          "type": "integer"
        },
        "bestLatencyMsTx": {
          "type": "integer"
        },
        "bestLossPctRx": {
          "type": "number",
          "format": "float"
        },
        "bestLossPctTx": {
          "type": "number",
          "format": "float"
        },
        "bpsOfBestPathRx": {
          "type": "integer"
        },
        "bpsOfBestPathTx": {
          "type": "integer"
        },
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "link": {
          "type": "object",
          "properties": {
            "enterpriseName": {
              "type": "string"
            },
            "enterpriseId": {
              "type": "integer"
            },
            "edgeName": {
              "type": "string"
            },
            "edgeSerialNumber": {
              "type": "string"
            },
            "edgeHASerialNumber": {
              "type": "string"
            },
            "edgeState": {
              "type": "string",
              "enum": [
                "NEVER_ACTIVATED",
                "DEGRADED",
                "OFFLINE",
                "DISABLED",
                "EXPIRED",
                "CONNECTED"
              ]
            },
            "edgeLastContact": {
              "type": "string",
              "format": "date-time"
            },
            "edgeId": {
              "type": "integer"
            },
            "edgeSystemUpSince": {
              "type": "string",
              "format": "date-time"
            },
            "edgeServiceUpSince": {
              "type": "string",
              "format": "date-time"
            },
            "edgeModelNumber": {
              "type": "string"
            },
            "isp": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "interface": {
              "type": "string"
            },
            "linkId": {
              "type": "integer"
            },
            "linkState": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "STABLE",
                "UNSTABLE",
                "DISCONNECTED",
                "QUIET",
                "INITIAL",
                "STANDBY"
              ]
            },
            "linkLastActive": {
              "type": "string",
              "format": "date-time"
            },
            "linkVpnState": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "STABLE",
                "UNSTABLE",
                "DEAD",
                "STANDBY"
              ]
            }
          },
          "required": [
            "id",
            "created",
            "edgeId",
            "logicalId",
            "internalId",
            "interface",
            "macAddress",
            "ipAddress",
            "netmask",
            "networkSide",
            "networkType",
            "displayName",
            "isp",
            "org",
            "lat",
            "lon",
            "lastActive",
            "state",
            "backupState",
            "vpnState",
            "lastEvent",
            "lastEventState",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "serviceState",
            "modified"
          ]
        },
        "linkId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "p1BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "scoreRx": {
          "type": "number",
          "format": "float"
        },
        "scoreTx": {
          "type": "number",
          "format": "float"
        },
        "signalStrength": {
          "type": "number",
          "format": "float"
        },
        "state": {
          "type": "integer"
        }
      },
      "required": [
        "link",
        "linkId",
        "name"
      ]
    },
    "monitoring_get_aggregate_enterprise_events_result": {
      "type": "object",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/aggregate_enterprise_event"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ]
    },
    "monitoring_get_aggregates_result": {
      "type": "object",
      "properties": {
        "edgeCount": {
          "type": "integer"
        },
        "edges": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "enterprises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_with_proxy_attributes"
          }
        }
      }
    },
    "monitoring_get_enterprise_bgp_peer_status_result_item": {
      "type": "object",
      "properties": {
        "gatewayName": {
          "type": "string"
        },
        "gatewayLogicalId": {
          "type": "string"
        },
        "neighbors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bgp_peer_status"
          }
        }
      }
    },
    "monitoring_get_enterprise_edge_bgp_peer_status_result_item": {
      "type": "object",
      "properties": {
        "edgeName": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeLogicalId": {
          "type": "string"
        },
        "neighbors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bgp_peer_status"
          }
        }
      }
    },
    "monitoring_get_enterprise_edge_link_status_result_item": {
      "type": "object",
      "properties": {
        "edgeId": {
          "type": "integer"
        },
        "edgeLastContact": {
          "format": "date-time",
          "type": "string"
        },
        "edgeModelNumber": {
          "type": "string"
        },
        "edgeName": {
          "type": "string"
        },
        "edgeServiceUpSince": {
          "format": "date-time",
          "type": "string"
        },
        "edgeState": {
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ],
          "type": "string"
        },
        "edgeSystemUpSince": {
          "format": "date-time",
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enterpriseName": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "isp": {
          "type": "string"
        },
        "linkId": {
          "type": "integer"
        },
        "linkLastActive": {
          "format": "date-time",
          "type": "string"
        },
        "linkState": {
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ],
          "type": "string"
        }
      },
      "required": [
        "enterpriseName",
        "enterpriseId",
        "edgeName",
        "edgeState",
        "edgeLastContact",
        "edgeId",
        "edgeSystemUpSince",
        "edgeServiceUpSince",
        "edgeModelNumber",
        "isp",
        "interface",
        "linkState",
        "linkLastActive",
        "linkId"
      ]
    },
    "monitoring_get_enterprise_edge_vnf_status_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                },
                "vendorSpecificData": {
                  "type": "object"
                }
              }
            },
            "edgeCount": {
              "type": "integer"
            },
            "edgeUsage": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "configurationId": {
                    "type": "integer"
                  },
                  "edgeSpecificId": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "profileId": {
                    "type": "integer"
                  },
                  "vnfStatus": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "vmStatus": {
                        "type": "string"
                      },
                      "vnfInsertionEnabled": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "network_delete_network_gateway_pool_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "network_get_network_configurations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "description",
            "effective",
            "modified",
            "name",
            "version"
          ]
        }
      ]
    },
    "network_get_network_enterprises_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            },
            "enterpriseProxyName": {
              "type": "string"
            },
            "edgeCount": {
              "type": "integer"
            },
            "edges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_object"
              }
            },
            "edgeConfigUpdate": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "enabledOnUpgrade": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      ]
    },
    "network_get_network_gateway_pools_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_pool"
        },
        {
          "properties": {
            "gateways": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/gateway_pool_gateway"
              }
            },
            "enterprises": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_with_proxy_attributes"
              }
            }
          },
          "required": [
            "id",
            "networkId",
            "enterpriseProxyId",
            "created",
            "name",
            "description",
            "isDefault",
            "handOffType",
            "modified"
          ]
        }
      ]
    },
    "gateway_handoff_edge": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "type": "object",
          "properties": {
            "edgeId": {
              "type": "integer"
            },
            "isPrimary": {
              "type": "integer"
            },
            "pinned": {
              "type": "integer"
            },
            "enterpriseLogicalId": {
              "type": "string"
            },
            "enterpriseName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "gateway_enterprise_assoc": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "type": "object",
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseObjectId": {
              "type": "integer"
            },
            "edgeId": {
              "type": "integer"
            },
            "gatewayType": {
              "type": "string",
              "enum": [
                "OTHER",
                "SUPER",
                "DATACENTER",
                "HANDOFF"
              ]
            },
            "pinned": {
              "type": "integer"
            },
            "enterpriseObjectName": {
              "type": "string"
            },
            "enterpriseObjectType": {
              "type": "string"
            },
            "edgeName": {
              "type": "string"
            },
            "edgeLogicalId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "edge_certificate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "csrId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "certificate": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "subjectKeyId": {
          "type": "string"
        },
        "fingerPrint": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gateway_certificate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "csrId": {
          "type": "integer"
        },
        "gatewayId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "certificate": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "subjectKeyId": {
          "type": "string"
        },
        "fingerPrint": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gateway_site": {
      "allOf": [
        {
          "$ref": "#/definitions/site"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "modified": {
              "type": "string",
              "format": "date-time"
            },
            "timezone": {
              "type": "string"
            },
            "locale": {
              "type": "string"
            },
            "shippingSameAsLocation": {
              "type": "integer"
            },
            "shippingContactName": {
              "type": "string"
            },
            "shippingAddress": {
              "type": "string"
            },
            "shippingAddress2": {
              "type": "string"
            },
            "shippingCity": {
              "type": "string"
            },
            "shippingState": {
              "type": "string"
            },
            "shippingPostalCode": {
              "type": "string"
            },
            "shippingCountry": {
              "type": "string"
            }
          }
        }
      ]
    },
    "gateway_gateway_pool": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_pool"
        },
        {
          "type": "object",
          "properties": {
            "gatewayPoolAssocId": {
              "type": "integer"
            },
            "gatewayId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "gateway_role": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "gatewayId": {
          "type": "integer"
        },
        "gatewayRole": {
          "type": "string",
          "enum": [
            "DATA_PLANE",
            "CONTROL_PLANE",
            "VPN_TUNNEL",
            "ON_PREMISE",
            "CDE"
          ],
          "x-alternate-name": "gatewayRoleProperty"
        },
        "required": {
          "type": "integer"
        }
      }
    },
    "gateway_handoff_segment_metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "segmentId": {
          "type": "integer"
        },
        "segmentLogicalId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "REGULAR",
            "CDE"
          ]
        }
      }
    },
    "gateway_handoff_value_bgp_priority_setup_auto_as": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "gateway_handoff_value_bgp_priority_setup_auto_med": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "gateway_handoff_value_vlan": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "cTag": {
            "type": "integer"
          },
          "sTag": {
            "type": "integer"
          },
          "transportLanVLAN": {
            "type": "string"
          }
        }
      }
    },
    "gateway_handoff_value_segments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/gateway_handoff_value"
      }
    },
    "gateway_handoff_value": {
      "type": "object",
      "properties": {
        "segments": {
          "$ref": "#/definitions/gateway_handoff_value_segments"
        },
        "segment": {
          "$ref": "#/definitions/gateway_handoff_segment_metadata"
        },
        "bgpPrioritySetup": {
          "type": "object",
          "properties": {
            "autoAs": {
              "$ref": "#/definitions/gateway_handoff_value_bgp_priority_setup_auto_as"
            },
            "autoMed": {
              "$ref": "#/definitions/gateway_handoff_value_bgp_priority_setup_auto_med"
            },
            "communityMapping": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "priorityMode": {
                  "type": "string",
                  "enum": [
                    "ALL_SEGMENTS",
                    "PER_SEGMENT"
                  ]
                },
                "priorities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "community": {
                        "type": "string"
                      },
                      "community2": {
                        "type": "string"
                      },
                      "priority": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "802.1Q",
            "802.1ad",
            "QinQ (0x9100)",
            "QinQ (0x8100)"
          ]
        },
        "override": {
          "type": "boolean"
        },
        "cTag": {
          "type": "integer"
        },
        "sTag": {
          "type": "integer"
        },
        "localAddress": {
          "type": "object",
          "properties": {
            "cidrIp": {
              "type": "string"
            },
            "cidrPrefix": {
              "type": "integer"
            },
            "useForPrivate": {
              "type": "boolean"
            },
            "advertiseViaBgp": {
              "type": "boolean"
            },
            "override": {
              "type": "boolean"
            }
          }
        },
        "staticRoutes": {
          "type": "object",
          "properties": {
            "override": {
              "type": "boolean"
            },
            "subnets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "cidrIp": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  },
                  "encrypt": {
                    "type": "boolean"
                  },
                  "handOffType": {
                    "type": "string",
                    "enum": [
                      "NAT",
                      "VLAN"
                    ]
                  },
                  "routeCost": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "bgp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ASN": {
              "type": "string"
            },
            "neighborIp": {
              "type": "string"
            },
            "neighborASN": {
              "type": "string"
            },
            "encryption": {
              "type": "boolean"
            }
          }
        },
        "bgpInboundMap": {
          "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
        },
        "bgpOutboundMap": {
          "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
        },
        "VLAN": {
          "$ref": "#/definitions/gateway_handoff_value_vlan"
        },
        "overrides": {
          "type": "object",
          "properties": {
            "VLAN": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "cTag": {
                    "type": "integer"
                  },
                  "sTag": {
                    "type": "integer"
                  },
                  "transportLanVLAN": {
                    "type": "string"
                  }
                }
              }
            },
            "bgp": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "ASN": {
                    "type": "string"
                  },
                  "neighborIp": {
                    "type": "string"
                  },
                  "neighborASN": {
                    "type": "string"
                  },
                  "encryption": {
                    "type": "boolean"
                  }
                }
              }
            },
            "bgpInboundMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
              }
            },
            "bgpOutboundMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
              }
            },
            "localAddress": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "cidrIp": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  },
                  "useForPrivate": {
                    "type": "boolean"
                  },
                  "advertiseViaBgp": {
                    "type": "boolean"
                  }
                }
              }
            },
            "subnets": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "gateway_handoff": {
      "type": "object",
      "properties": {
        "enterpriseId": {
          "type": "integer"
        },
        "value": {
          "$ref": "#/definitions/gateway_handoff_value"
        }
      }
    },
    "gateway_handoff_bgp_rules_map": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_handoff_bgp_rule"
          }
        },
        "override": {
          "type": "boolean"
        }
      }
    },
    "gateway_handoff_bgp_rule": {
      "allOf": [
        {
          "$ref": "#/definitions/bgp_filter_rule"
        }
      ]
    },
    "bgp_filter_rule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "match": {
          "type": "object",
          "properties": {
            "exactMatch": {
              "type": "boolean"
            },
            "type": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "network_get_network_gateways_result_item": {
      "type": "object",
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "activationState": {
          "type": "string",
          "enum": [
            "UNASSIGNED",
            "PENDING",
            "ACTIVATED",
            "REACTIVATION_PENDING"
          ]
        },
        "activationTime": {
          "type": "string"
        },
        "alertsEnabled": {
          "type": "boolean"
        },
        "buildNumber": {
          "type": "string"
        },
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_certificate"
          }
        },
        "connectedEdges": {
          "type": "integer"
        },
        "connectedEdgeList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "vceid": {
                "type": "string"
              }
            }
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "dataCenters": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "description": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "dnsName": {
          "type": "string"
        },
        "endpointPkiMode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ]
        },
        "enterpriseAssociations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_enterprise_assoc"
          }
        },
        "enterprises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise"
          }
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "gatewayState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "QUIESCED",
            "DISABLED",
            "OUT_OF_SERVICE",
            "CONNECTED",
            "OFFLINE"
          ]
        },
        "handOffDetail": {
          "$ref": "#/definitions/gateway_handoff_detail"
        },
        "handOffEdges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_handoff_edge"
          }
        },
        "id": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipsecGatewayDetail": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "strictHostCheck": {
              "type": "boolean"
            },
            "strictHostCheckDN": {
              "type": "string"
            }
          }
        },
        "isLoadBalanced": {
          "type": "boolean"
        },
        "lastContact": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "networkId": {
          "type": "integer"
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_gateway_pool"
          }
        },
        "privateIpAddress": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_role"
          }
        },
        "serviceState": {
          "type": "string",
          "enum": [
            "IN_SERVICE",
            "OUT_OF_SERVICE",
            "PENDING_SERVICE",
            "QUIESCED"
          ]
        },
        "serviceUpSince": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/gateway_site"
        },
        "siteId": {
          "type": "integer"
        },
        "softwareVersion": {
          "type": "string"
        },
        "systemUpSince": {
          "type": "string"
        },
        "utilization": {
          "type": "number"
        },
        "utilizationDetail": {
          "type": "object",
          "properties": {
            "load": {
              "type": "number"
            },
            "overall": {
              "type": "number"
            },
            "cpu": {
              "type": "number"
            },
            "memory": {
              "type": "number"
            }
          }
        }
      }
    },
    "network_get_network_operator_users_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/operator_user_with_role_info"
        }
      ]
    },
    "network_insert_network_gateway_pool_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "network_update_network_gateway_pool_attributes_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "new_enterprise_user": {
      "allOf": [
        {
          "$ref": "#/definitions/base_enterprise_user"
        },
        {
          "type": "object",
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseProxyId": {
              "type": "integer"
            },
            "roleId": {
              "type": "integer"
            }
          },
          "required": [
            "roleId",
            "username",
            "password"
          ]
        }
      ]
    },
    "new_enterprise_proxy_user": {
      "allOf": [
        {
          "$ref": "#/definitions/new_enterprise_user"
        }
      ]
    },
    "operator_user_insert_operator_user": {
      "allOf": [
        {
          "$ref": "#/definitions/base_enterprise_user"
        },
        {
          "properties": {
            "networkId": {
              "type": "integer"
            },
            "password": {
              "format": "password",
              "type": "string"
            },
            "roleId": {
              "type": "integer"
            },
            "username": {
              "type": "string"
            }
          },
          "required": [
            "networkId",
            "roleId",
            "username",
            "password"
          ],
          "type": "object"
        }
      ]
    },
    "role_create_role_customization_result": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "role_delete_role_customization_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "role_get_user_type_roles_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/role"
        },
        {
          "required": [
            "id",
            "created",
            "operatorId",
            "networkId",
            "enterpriseId",
            "enterpriseProxyId",
            "name",
            "userType",
            "fromUserType",
            "isSuper",
            "description",
            "precedence",
            "modified"
          ]
        }
      ]
    },
    "set_delegated_result": {
      "type": "object",
      "properties": {
        "isDelegated": {
          "type": "boolean"
        }
      },
      "required": [
        "isDelegated"
      ]
    },
    "role_set_enterprise_delegated_to_enterprise_proxy_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "role_set_enterprise_delegated_to_operator_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "role_set_enterprise_proxy_delegated_to_operator_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "role_set_enterprise_user_management_delegated_to_operator_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "system_property": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "isPassword": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "JSON",
            "DATE",
            "DATETIME"
          ]
        },
        "description": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "system_property_get_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/system_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "value",
            "defaultValue",
            "isReadOnly",
            "isPassword",
            "dataType",
            "description"
          ]
        }
      ]
    },
    "system_property_get_system_properties_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/system_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "value",
            "defaultValue",
            "isReadOnly",
            "isPassword",
            "dataType",
            "description"
          ]
        }
      ]
    },
    "system_property_insert_or_update_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "system_property_insert_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "system_property_update_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_get_enterprise_users_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_info"
        },
        {
          "required": [
            "id",
            "created",
            "userType",
            "username",
            "domain",
            "password",
            "firstName",
            "lastName",
            "officePhone",
            "mobilePhone",
            "email",
            "isNative",
            "isActive",
            "isLocked",
            "lastLogin",
            "modified",
            "roleId",
            "roleName"
          ]
        }
      ]
    },
    "enterprise_insert_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_user_delete_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_user_get_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_and_assocs"
        },
        {
          "required": [
            "id",
            "created",
            "userType",
            "username",
            "domain",
            "password",
            "firstName",
            "lastName",
            "officePhone",
            "mobilePhone",
            "email",
            "isNative",
            "isActive",
            "isLocked",
            "lastLogin",
            "modified",
            "roleId",
            "roleName",
            "enterpriseId",
            "enterpriseProxyId",
            "networkId"
          ]
        }
      ]
    },
    "enterprise_user_update_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_proxy_delete_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_info"
        },
        {
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            },
            "networkId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "enterprise_proxy_insert_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_update_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_users_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_info"
        },
        {
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            },
            "networkId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "operator_user_delete_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "operator_user_get_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/operator_user_with_role_info"
        }
      ]
    },
    "operator_user_insert_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "operator_user_update_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "operatorId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "userType": {
          "type": "string",
          "enum": [
            "OPERATOR",
            "MSP",
            "PARTNER",
            "ENTERPRISE",
            "END_USER",
            "CUSTOM"
          ]
        },
        "fromUserType": {
          "type": "string",
          "enum": [
            "OPERATOR",
            "MSP",
            "PARTNER",
            "ENTERPRISE",
            "END_USER",
            "CUSTOM"
          ]
        },
        "isSuper": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "precedence": {
          "type": "integer"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protocol_port_mapping": {
      "properties": {
        "tcpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "udpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "rows_modified_confirmation": {
      "type": "object",
      "properties": {
        "error": {
          "description": "An error message explaining why the method failed",
          "type": "string"
        },
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      },
      "required": [
        "rows"
      ],
      "example": {
        "rows": 1
      }
    },
    "insertion_confirmation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The id of the newly-created object."
        },
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        },
        "error": {
          "description": "An error message explaining why the method failed",
          "type": "string"
        }
      },
      "required": [
        "rows"
      ],
      "example": {
        "id": 123,
        "rows": 1
      }
    },
    "deletion_confirmation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The id of the deleted object."
        },
        "error": {
          "description": "An error message explaining why the method failed",
          "type": "string"
        },
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      },
      "required": [
        "rows"
      ],
      "example": {
        "id": 123,
        "rows": 1
      }
    },
    "site": {
      "allOf": [
        {
          "$ref": "#/definitions/site_object"
        }
      ]
    },
    "site_object": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "contactEmail": {
          "format": "email",
          "type": "string"
        },
        "contactMobile": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "streetAddress2": {
          "type": "string"
        }
      }
    },
    "firewall_get_enterprise_firewall_logs_result": {
      "type": "object",
      "properties": {
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_log_data"
          }
        },
        "rules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/firewall_rule"
          }
        }
      }
    },
    "firewall_log_data": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "allow": {
          "type": "integer"
        },
        "ruleLogicalId": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "ICMP",
            "TCP",
            "UDP",
            "GRE"
          ]
        },
        "sourceIp": {
          "type": "string"
        },
        "sourcePort": {
          "type": "integer"
        },
        "destIp": {
          "type": "string"
        },
        "destPort": {
          "type": "integer"
        },
        "icmpType": {
          "type": "string"
        },
        "length": {
          "type": "integer"
        }
      }
    },
    "firewall_rule": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "type": "string"
        },
        "deactivated": {
          "type": "string"
        },
        "edgeLogicalId": {
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "INBOUND",
            "OUTBOUND",
            "SERVICE"
          ]
        }
      }
    },
    "vco_inventory_get_inventory_items_result": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/inventory_item"
      }
    },
    "inventory_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "deviceSerialNumber": {
          "type": "string"
        },
        "deviceUuid": {
          "type": "string"
        },
        "modelNumber": {
          "type": "string"
        },
        "siteId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "acknowledged": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "edge": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "edge": {
              "type": "string"
            },
            "site": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "inventoryState": {
          "type": "string"
        },
        "inventoryEdgeState": {
          "type": "string"
        },
        "inventoryAction": {
          "type": "string"
        },
        "vcoOwnerId": {
          "type": "integer"
        },
        "vcoOwner": {
          "type": "object",
          "properties": {
            "accountNumber": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_get_enterprise_network_segments_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/network_segment"
        }
      ]
    },
    "enterprise_encode_enterprise_key_result": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "required": [
        "key"
      ]
    },
    "enterprise_decode_enterprise_key_result": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "required": [
        "key"
      ]
    },
    "network_segment": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/network_segment_data"
            },
            "profileCount": {
              "type": "integer"
            },
            "handoffUsage": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "isAllMPGCDE": {
              "type": "boolean"
            },
            "isAllCtrlCDE": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "network_segment_data": {
      "type": "object",
      "properties": {
        "segmentId": {
          "type": "integer"
        },
        "serviceVlan": {
          "type": "integer"
        },
        "delegateToEnterprise": {
          "type": "boolean"
        },
        "delegateToEnterpriseProxy": {
          "type": "boolean"
        }
      }
    },
    "edge_get_edge_certificates_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_certificate"
        }
      ]
    },
    "vpn_generate_vpn_gateway_configuration_result": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "object": {
          "type": "string",
          "enum": [
            "NETWORK_ALLOCATION",
            "NETWORK_SERVICE",
            "CUSTOM_APPLICATION",
            "ROUTING_CONFIGURATION",
            "NETWORK_SEGMENT",
            "HA_SERVICE",
            "PRIVATE_NETWORK",
            "CDE_GATEWAY"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "dns",
            "authentication",
            "dataCenter",
            "dataCenterEdge",
            "edgeHub",
            "partnerGateway",
            "edgeHubCluster",
            "edgeBranchCluster",
            "localUiCredentials",
            "edgeBranchClusterMember",
            "edgeHubClusterMember",
            "securityVnf",
            "edgeVrrpPairSet",
            "cloudSecurityService",
            "cloudSecurityServiceSite",
            "securityVnfLicense",
            "securityVnfService",
            "primary",
            "secondary",
            "controllerGateway",
            "tacacs",
            "custom"
          ]
        },
        "data": {
          "$ref": "#/definitions/data_center_data"
        }
      }
    },
    "data_center_data": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "isCDE": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "primary": {
          "$ref": "#/definitions/data_center_vpn_tunnel"
        },
        "secondary": {
          "$ref": "#/definitions/data_center_vpn_tunnel"
        },
        "subnets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "advertise": {
                "type": "boolean"
              },
              "cidrIp": {
                "type": "string",
                "format": "ipv4"
              },
              "cidrIpStart": {
                "type": "string",
                "format": "ipv4"
              },
              "cidrIpEnd": {
                "type": "string",
                "format": "ipv4"
              },
              "cidrPrefix": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "netMask": {
                "type": "string",
                "format": "ipv4"
              }
            }
          }
        }
      }
    },
    "data_center_vpn_tunnel": {
      "type": "object",
      "properties": {
        "IKESA": {
          "type": "object",
          "properties": {
            "DHGroup": {
              "type": "integer"
            },
            "authenticationAlgorithm": {
              "type": "string"
            },
            "authenticationMethod": {
              "type": "string"
            },
            "ikeVersion": {
              "type": "integer"
            },
            "lifeTimeSeconds": {
              "type": "integer"
            },
            "phaseOneNegotiationMode": {
              "type": "string",
              "enum": [
                "main",
                "aggressive"
              ]
            },
            "sharedKey": {
              "type": "string"
            },
            "sharedKeyType": {
              "type": "string"
            }
          }
        },
        "IPSECDPD": {
          "type": "object",
          "properties": {
            "intervalSeconds": {
              "type": "integer"
            },
            "retries": {
              "type": "integer"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "IPSECSA": {
          "type": "object",
          "properties": {
            "authenticationAlgorithm": {
              "type": "string"
            },
            "encryptionAlgorithm": {
              "type": "string"
            },
            "lifeTimeSeconds": {
              "type": "integer"
            },
            "mode": {
              "type": "string"
            },
            "perfectForwardSecurity": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          }
        },
        "dataCenterLinkIp": {
          "type": "string",
          "format": "ipv4"
        },
        "dataCenterPublicIp": {
          "type": "string",
          "format": "ipv4"
        },
        "disabled": {
          "type": "boolean"
        },
        "fragmentationAvoidance": {
          "type": "object",
          "properties": {
            "tcpMssAdjustmentBytes": {
              "type": "integer"
            },
            "clearDontFragmentBit": {
              "type": "string"
            },
            "fragmentationStyle": {
              "type": "string"
            }
          }
        },
        "gatewayLinkIp": {
          "type": "string",
          "format": "ipv4"
        },
        "gatewayPublicIp": {
          "type": "string",
          "format": "ipv4"
        },
        "geoData": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          }
        },
        "redundant": {
          "$ref": "#/definitions/data_center_vpn_tunnel"
        },
        "serviceFQDN": {
          "type": "string"
        },
        "tunnelInterface": {
          "type": "object",
          "properties": {
            "MTU": {
              "type": "integer"
            }
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Cisco ISR",
            "Cisco ASA",
            "SonicWall",
            "Palo Alto",
            "Other",
            "Generic Policy",
            "Zscaler",
            "GenericIKEv2Router"
          ]
        }
      }
    }
  },
  "parameters": {
    "auth_param": {
      "name": "authorization",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/auth_object"
      }
    }
  },
  "responses": {
    "generic_200": {
      "description": "Request was successfully processed",
      "schema": {
        "type": "object"
      }
    },
    "generic_400": {
      "description": "Invalid Request: Please check your request schema",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "generic_500": {
      "description": "Error parsing or processing request",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "no_credentials": {
      "description": "Authorization Cookie not Received"
    },
    "forbidden": {
      "description": "Insufficient Permissions"
    }
  }
}

